{"version":3,"sources":["context/authContext.js","context/userContext.js","components/PrivateComponent.jsx","components/Sidebar.jsx","graphql/auth/mutation.js","components/PrivateRoute.jsx","layouts/PrivateLayout.jsx","graphql/proyectos/queries.js","pages/proyectosAdmin/index.jsx","components/ButtonLoading.jsx","hooks/useFormData.js","graphql/proyectos/mutations.js","components/Dropdown.jsx","utils/enums.js","pages/proyectosAdmin/EditarEstadoFase.jsx","graphql/proyectosLider/queries.js","pages/proyectosLider/index.jsx","graphql/inscripciones/mutaciones.js","graphql/proyectosLider/mutations.js","pages/proyectosLider/detalle.jsx","graphql/proyectosEstudiante/queries.js","pages/proyectosEstudiante/index.jsx","graphql/proyectosEstudiante/mutations.js","pages/proyectosEstudiante/proyectosDisponibles.jsx","pages/proyectosEstudiante/avances.jsx","components/Input.jsx","pages/proyectosEstudiante/editarAvance.jsx","pages/proyectosEstudiante/NuevoAvance.jsx","components/Carousel.jsx","pages/Index.jsx","pages/Page2.jsx","graphql/usuarios/queries.js","pages/usuarios/index.jsx","graphql/usuarios/mutations.js","pages/usuarios/editar.jsx","layouts/AuthLayout.jsx","pages/auth/register.jsx","pages/auth/login.jsx","components/Accordion.jsx","context/projectQueryContext.js","pages/proyectos/Index.jsx","context/objContext.js","pages/proyectos/NuevoProyecto.jsx","graphql/inscripciones/queries.js","pages/inscripciones/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","UserContext","useUser","PrivateComponent","roleList","children","userData","includes","rol","SidebarLinks","class","className","to","title","icon","Logout","setToken","onClick","console","log","Logo","src","alt","ResponsiveSidebar","id","SidebarRoute","isActive","Sidebar","useState","open","setOpen","REGISTRO","gql","LOGIN","REFRESH_TOKEN","PrivateRoute","data-testid","PrivateLayout","navigate","useNavigate","authToken","loadingAuth","setLoadingAuth","useMutation","refreshToken","dataMutation","data","loadingMutation","loading","error","useEffect","token","PROYECTOS","GET_PROYECTOS","GET_PROYECTO","IndexProyectosAdmin","useQuery","refetch","toast","scope","Proyectos","map","p","_id","slice","nombre","presupuesto","fechaInicio","fechaFin","estado","fase","ButtonLoading","disabled","text","viewBox","type","height","width","useFormData","initial","form","useRef","formData","setFormData","updateFormData","fd","FormData","current","obj","forEach","value","key","split","p1","p2","p3","Object","keys","getFormData","CREAR_PROYECTO","EDITAR_PROYECTO_FASE_ESTADO","ELIMINAR_OBJETIVO","EDITAR_OBJETIVO","DropDown","label","name","defaultValue","required","options","selectedValue","setSelectedValue","optionsSelect","entries","htmlFor","onChange","e","target","o","nanoid","Enum_Rol","ADMINISTRADOR","ESTUDIANTE","LIDER","Enum_EstadoUsuario","PENDIENTE","AUTORIZADO","NO_AUTORIZADO","Enum_EstadoProyecto","ACTIVO","INACTIVO","Enum_FaseProyecto","INICIADO","DESARROLLO","TERMINADO","NULO","Enum_TipoObjetivo","GENERAL","ESPECIFICO","EditarEstadoFase","useParams","variables","queryData","queryError","queryLoading","editarProyectoFaseEstado","mutationData","mutationLoading","mutationError","success","onSubmit","preventDefault","ref","ProyectoEstadoFase","readonly","length","GET_PROYECTOS_LIDER","GET_PROYECTOS_DETALLE","IndexProyectosLider","IdLider","setIdLider","ProyectosPorLider","u","lider","apellido","style","color","APROBAR_INSCRIPCION","RECHAZAR_INSCRIPCION","EDITAR_PROYECTO_LIDER","ADD_OBSERVACION_AVANCE","ProyectosDetalle","editarProyecto","mutationData3","editarAvanceObs","mutationData4","inhabilitarInputs","queryData2","queryLoading2","aprobarInscripcion","aprobarData","aprobarLoading","aprobarError","cambiarEstadoInscripcion","idInscripcion","aprobarInscripcionId","rechazarInscripcion","rechazarData","rechazarLoading","rechazarError","document","querySelector","display","obtenerAvance","tabindex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","for","toString","observaciones","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","parseFloat","ProyectosPorId","objetivos","tipo","descripcion","avances","obs","inscripciones","estudiante","correo","fechaIngreso","rechazarInscripcionId","GET_PROYECTOS_INSCRITOS","GET_AVANCES","GET_AVANCE","IndexProyectosEstudiante","IdEstudiante","setIdEstudiante","ProyectosInscritos","proyecto","CREAR_INSCRIPCION","EDITAR_AVANCE","CREAR_AVANCE","IndexProyectosDisponibles","InscripcionProyecto","idProyecto","estadoInscripcion","setEstadoInscripcion","crearInscripcion","flt","filter","el","AvancesEstudiante","filtrarAvance","fecha","creadoPor","Input","EditarAvance","editarUsuario","Avance","NuevoAvance","crearAvance","Carousel","data-bs-ride","Index","Page2","GET_USUARIOS","GET_USUARIO","IndexUsuarios","Usuarios","identificacion","EDITAR_USUARIO","EditarUsuario","Usuario","AuthLayout","Register","registro","Login","login","AccordionStyled","styled","props","Accordion","theme","backgroundColor","AccordionSummaryStyled","AccordionSummary","AccordionDetailsStyled","AccordionDetails","ProjectQueryContext","useProjectQuery","AccordionProyecto","showDialog","setShowDialog","expandIcon","objetivo","index","Dialog","onClose","Objetivo","showEditDialog","setShowEditDialog","eliminarObjetivo","dataMutationEliminar","eliminarLoading","idObjetivo","EditarObjetivo","editatObjetivo","indexObjetivo","campos","IndexProyectos","Provider","ObjContext","Objetivos","listaObjetivos","setListaObjetivos","maxObjetivos","setMaxObjetivos","componenteObjetivoAgregado","FormObjetivo","NuevoProyecto","listaUsuarios","setListaUsuarios","filtro","crearProyecto","lu","elemento","values","GET_INSCRIPCIONES","AccordionInscripcion","titulo","inscripcion","Inscripcion","IndexInscripciones","Inscripciones","httpLink","createHttpLink","uri","authLink","setContext","_","headers","JSON","parse","localStorage","getItem","authorization","client","ApolloClient","cache","InMemoryCache","link","concat","App","setUserData","setAuthToken","decoded","jwt_decode","ApolloProvider","setItem","stringify","removeItem","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.67fe81c2.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const AuthContext = createContext(null);\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n","import { createContext, useContext } from 'react';\n\nexport const UserContext = createContext(null);\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};\n","import { useUser } from \"context/userContext\";\nimport React from \"react\";\n\nconst PrivateComponent = ({ roleList, children }) => {\n  const { userData } = useUser();\n\n  if (roleList.includes(userData.rol)) {\n    return children;\n  }\n\n  return <></>;\n};\n\nexport default PrivateComponent;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useAuth } from \"context/authContext\";\nimport PrivateComponent from \"./PrivateComponent\";\n\nconst SidebarLinks = () => {\n  return (\n    <div class=\"bg-gradient-to-r from-indigo-500 to-blue-500 rounded-lg px-6 py-8 ring-8 ring-gray-900/5 shadow-xl\">\n      <ul className=\"mt-12\">\n        <SidebarRoute to=\"\" title=\"Inicio\" icon=\"fas fa-home\" />\n        {/* ADMIN */}\n        <PrivateComponent roleList={[\"ADMINISTRADOR\"]}>\n          <SidebarRoute to=\"/usuarios\" title=\"Usuarios\" icon=\"fas fa-user\" />\n          <SidebarRoute\n            to=\"/proyectosAdmin\"\n            title=\"Proyectos-Admin\"\n            icon=\"fas fa-clipboard-check\"\n          />\n        </PrivateComponent>\n\n        {/* LIDER */}\n        <PrivateComponent roleList={[\"LIDER\"]}>\n          {/* <SidebarRoute\n            to=\"/inscripciones\"\n            title=\"Aprobacion Inscripciones\"\n            icon=\"fas fa-user\"\n          /> */}\n          <SidebarRoute\n            to=\"/proyectosObjetivo\"\n            title=\"Proyectos Objetivos\"\n            // icon=\"fas fa-smile-wink\"\n            icon=\"fas fa-object-group\"\n          />\n          <SidebarRoute\n            to=\"/proyectosLider/index\"\n            title=\"Proyectos-Lider\"\n            icon=\"fas fa-clipboard-check\"\n          />\n        </PrivateComponent>\n        {/* ESTUDIANTE */}\n        <PrivateComponent roleList={[\"ESTUDIANTE\"]}>\n          <SidebarRoute\n            to=\"/proyectosEstudiante/index\"\n            title=\"Proyectos Inscritos\"\n            icon=\"fas fa-clipboard-check\"\n          />\n          <SidebarRoute\n            to=\"/proyectosEstudiante/proyectosDisponibles\"\n            title=\"Inscribir Proyecto\"\n            icon=\"fas fa-folder-plus\"\n          />\n        </PrivateComponent>\n        <Logout />\n      </ul>\n    </div>\n  );\n};\n\nconst Logout = () => {\n  const { setToken } = useAuth();\n  const deleteToken = () => {\n    console.log(\"eliminar token\");\n    setToken(null);\n  };\n  return (\n    <button\n      className=\"bg-gradient-to-r from-red-400 to-orange-500 text-white font-bold text-lg   rounded-xl hover:from-pink-500 hover:to-yellow-500 hadow-md my-2 disabled:opacity-50 disabled:bg-gray-700\">\n      <li onClick={() => deleteToken()}>\n        <NavLink to=\"/auth/login\" className=\"sidebar-route text-red-700\">\n          <div className=\"flex items-center\">\n            <i className=\"fas fa-sign-out-alt\" />\n            <span className=\"text-sm  ml-2\">Cerrar Sesión</span>\n          </div>\n        </NavLink>\n      </li>\n    </button>\n  );\n};\n\nconst Logo = () => {\n  return (\n    <div class=\"bg-gradient-to-r from-indigo-500 to-blue-500 rounded-lg px-6 py-8 ring-8 ring-gray-900/5 shadow-xl\">\n      <div className=\"py-5 w-full flex flex-col items-center justify-center\">\n        <img src=\"logo-rsoft.png\" alt=\"Logo\" className=\"h-18\" />\n        <span className=\"my-5 text-xl font-bold text-center\">\n          Sistema de Gestión de Proyectos\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst Sidebar = () => {\n  const [open, setOpen] = useState(true);\n  return (\n    <div className=\"flex flex-col md:flex-row flex-no-wrap md:h-full\">\n      {/* Sidebar starts */}\n\n      <div className=\"sidebar hidden md:flex\">\n        <div className=\"px-8\">\n          <Logo />\n          <SidebarLinks />\n        </div>\n      </div>\n      <div className=\"flex md:hidden w-full justify-between bg-gray-800 p-2 text-white\">\n        <i\n          className={`fas fa-${open ? \"times\" : \"bars\"}`}\n          onClick={() => setOpen(!open)}\n        />\n        <i className=\"fas fa-home\" />\n      </div>\n      {open && <ResponsiveSidebar />}\n      {/* Sidebar ends */}\n    </div>\n  );\n};\n\nconst ResponsiveSidebar = () => {\n  return (\n    <div>\n      <div\n        className=\"sidebar h-full z-40 absolute md:h-full sm:hidden transition duration-150 ease-in-out\"\n        id=\"mobile-nav\"\n      >\n        <div className=\"px-8\">\n          <Logo />\n          <SidebarLinks />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SidebarRoute = ({ to, title, icon }) => {\n  return (\n    <li>\n      <NavLink\n        to={to}\n        className={({ isActive }) =>\n          isActive\n            ? \"sidebar-route text-white bg-indigo-700\"\n            : \"sidebar-route text-gray-900 hover:text-white hover:bg-indigo-400\"\n        }\n      >\n        <div className=\"flex items-center\">\n          <i className={icon} />\n          <span className=\"text-sm  ml-2\">{title}</span>\n        </div>\n      </NavLink>\n    </li>\n  );\n};\n\nexport default Sidebar;\n","import { gql } from \"@apollo/client\";\n\nconst REGISTRO = gql`\n  mutation Registro(\n    $nombre: String!\n    $apellido: String!\n    $identificacion: String!\n    $correo: String!\n    $rol: Enum_Rol!\n    $password: String!\n  ) {\n    registro(\n      nombre: $nombre\n      apellido: $apellido\n      identificacion: $identificacion\n      correo: $correo\n      rol: $rol\n      password: $password\n    ) {\n      token\n      error\n    }\n  }\n`;\n\nconst LOGIN = gql`\n  mutation Login($correo: String!, $password: String!) {\n    login(correo: $correo, password: $password) {\n      token\n      error\n    }\n  }\n`;\n\nconst REFRESH_TOKEN = gql`\n  mutation RefreshToken {\n    refreshToken {\n      token\n      error\n    }\n  }\n`;\n\nexport { REGISTRO, LOGIN, REFRESH_TOKEN };\n","import { useUser } from \"context/userContext\";\nimport React from \"react\";\n\nconst PrivateRoute = ({ roleList, children }) => {\n  const { userData } = useUser();\n\n  if (roleList.includes(userData.rol)) {\n    return children;\n  }\n\n  return (\n    <div data-testid=\"not-authorized\" className=\"text-9xl text-red-500 \">\n      No estás autorizado para ver este sitio.\n    </div>\n  );\n};\n\nexport default PrivateRoute;\n","import Sidebar from \"components/Sidebar\";\nimport { Outlet } from \"react-router\";\nimport React, { useEffect, useState } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { useMutation } from \"@apollo/client\";\nimport { useAuth } from \"context/authContext\";\nimport { REFRESH_TOKEN } from \"graphql/auth/mutation\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PrivateRoute from \"components/PrivateRoute\";\n\nconst PrivateLayout = () => {\n  const navigate = useNavigate();\n  const { authToken, setToken } = useAuth();\n  const [loadingAuth, setLoadingAuth] = useState(true);\n\n  const [\n    refreshToken,\n    { data: dataMutation, loading: loadingMutation, error: errorMutation },\n  ] = useMutation(REFRESH_TOKEN);\n\n  useEffect(() => {\n    refreshToken();\n  }, [refreshToken]);\n\n  useEffect(() => {\n    if (dataMutation) {\n      if (dataMutation.refreshToken.token) {\n        setToken(dataMutation.refreshToken.token);\n      } else {\n        setToken(null);\n        navigate(\"/auth/login\");\n      }\n      setLoadingAuth(false);\n    }\n  }, [dataMutation, setToken, loadingAuth, navigate]);\n\n  if (loadingMutation || loadingAuth) return <div>Loading...</div>;\n\n  return (\n    <div className=\"flex flex-col md:flex-row flex-no-wrap h-screen\">\n      <Sidebar />\n      <div className=\"flex w-full h-full\">\n        <div className=\"w-full h-full  overflow-y-scroll\">\n          <Outlet />\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default PrivateLayout;\n","import { gql } from \"@apollo/client\";\n\nconst PROYECTOS = gql`\n  query Proyectos {\n    Proyectos {\n      _id\n      nombre\n      estado\n      objetivos {\n        _id\n        descripcion\n        tipo\n      }\n      lider {\n        _id\n        correo\n      }\n      inscripciones {\n        estado\n        estudiante {\n          _id\n          nombre\n        }\n      }\n    }\n  }\n`;\n\nconst GET_PROYECTO_INSCRIPCION = gql`\n  query ProyectosPorId($_id: String!) {\n    ProyectosPorId(_id: $_id) {\n      _id\n      estado\n      nombre\n      objetivos {\n        _id\n        tipo\n        descripcion\n      }\n    }\n  }\n`;\n\nconst GET_PROYECTOS = gql`\nquery Proyectos {\n  Proyectos {\n    _id\n    nombre\n    presupuesto\n    fechaInicio\n    fechaFin\n    estado\n    fase\n    lider {\n      _id\n      identificacion\n      nombre\n      apellido\n      correo\n      rol\n    }\n    objetivos {\n      tipo\n      descripcion\n    }\n  }\n}\n`;\n\nconst GET_PROYECTO = gql`\nquery Proyecto($_id: String!) {\n  ProyectoEstadoFase(_id: $_id) {\n    _id\n    nombre\n    presupuesto\n    fechaInicio\n    fechaFin\n    estado\n    fase\n  }\n}\n`;\n\nexport { PROYECTOS, GET_PROYECTO_INSCRIPCION, GET_PROYECTOS, GET_PROYECTO };\n","import React, { useEffect } from \"react\";\nimport PrivateRoute from \"components/PrivateRoute\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PROYECTOS } from \"../../graphql/proyectos/queries\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst IndexProyectosAdmin = () => {\n\n  const {data, error, loading, refetch} = useQuery(GET_PROYECTOS);\n\n  useEffect(() => {\n    console.log('Data Servidor', data)\n    refetch();\n  }, [data]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(\"Error en la consulta de los Proyectos\");\n    }\n  }, [error]);\n\n  if (loading) return <h1 className=\"text-center display-1 h1\"> Cargando!!</h1>;\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div>\n      <PrivateRoute roleList={[\"ADMINISTRADOR\"]}>\n        <h1 className=\"text-7xl text-gray-900 text-white font-medium tracking-tight text-center\">\n          Proyectos Registrados\n        </h1>\n\n        <div>\n          {/* <h1 className=\"text-center display-1 h1 pt-10\">ReactSoft</h1> */}\n          <div className=\"container pt-10\">\n            <table className=\"table table-success table-striped table-hover align-middle table-bordered \">\n              <thead className=\"table-primary \">\n                <tr className=\"\">\n                  <th scope=\"col\" className=\"text-center\">\n                    ID\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Nombre\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Presupuesto\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Fecha Inicio\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Fecha Fin\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Estado\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Fase\n                  </th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Editar\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {data &&\n                  data.Proyectos.map((p) => {\n                    return (\n                      <tr key={p._id}>\n                        {/* <th scope=\"row\" className=\"text-center\">{p._id.slice(20)}</th> */}\n                        <td className=\"text-center\">{p._id.slice(20)}</td>\n                        <td className=\"text-center\">{p.nombre}</td>\n                        <td className=\"text-center\">{p.presupuesto}</td>\n                        <td className=\"text-center\">\n                          {p.fechaInicio.slice(0, 10)}\n                        </td>\n                        <td className=\"text-center\">\n                          {p.fechaFin.slice(0, 10)}\n                        </td>\n                        <td className=\"text-center\">{p.estado}</td>\n                        <td className=\"text-center\">{p.fase}</td>\n                        <td>\n                          <Link to={`/proyectosAdmin/editar/${p._id}`}>\n                            <i className=\"fas fa-pen input-group justify-content-around \"></i>\n                          </Link>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </PrivateRoute>\n    </div>\n    </div>\n  );\n};\n\nexport default IndexProyectosAdmin;\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\n\nconst ButtonLoading = ({ disabled, loading, text, onClick = () => {} }) => {\n  return (\n    <button\n      data-testid=\"button-loading\"\n      class=\"motion-reduce:hidden animate-spin ...\"\n      viewBox=\"0 0 24 24\"\n      onClick={onClick}\n      disabled={disabled}\n      type=\"submit\"\n      //className=\" bg-blue-400  text-white font-bold text-md py-1 px-3  rounded-sm hover:bg-blue-600 shadow-md my-2 disabled:opacity-50 disabled:bg-gray-700\"\n      className=\"bg-gradient-to-r from-green-500 to-blue-600 text-white font-bold text-lg py-3 px-6  rounded-xl hover:from-pink-600 hover:to-yellow-600 hadow-md my-2 disabled:bg-gray-700\"\n    >\n      {loading ? (\n        <ReactLoading\n          data-testid=\"loading-in-button\"\n          type=\"spin\"\n          height={30}\n          width={30}\n        />\n      ) : (\n        text\n      )}\n    </button>\n  );\n};\n\nexport default ButtonLoading;\n","import { useRef, useState } from \"react\";\n\nconst useFormData = (initial) => {\n  const form = useRef(initial);\n  const [formData, setFormData] = useState({});\n  const getFormData = () => {\n    const fd = new FormData(form.current);\n    const obj = {};\n    fd.forEach((value, key) => {\n      if (key.includes(\"nested\")) {\n        const [p0, p1, p2, p3] = key.split(\"||\");\n        if (Object.keys(obj).includes(p1)) {\n          if (Object.keys(obj[p1]).includes(p2)) {\n            obj[p1][p2][p3] = value;\n          } else {\n            obj[p1][p2] = {\n              [p3]: value,\n            };\n          }\n        } else {\n          obj[p1] = {\n            [p2]: {\n              [p3]: value,\n            },\n          };\n        }\n      } else {\n        obj[key] = value;\n      }\n    });\n    console.log(obj);\n    return obj;\n  };\n  const updateFormData = () => {\n    setFormData(getFormData());\n  };\n  return { form, formData, updateFormData };\n};\n\nexport default useFormData;\n","import { gql } from \"@apollo/client\";\n\nconst EDITAR_PROYECTO = gql`\n  mutation Mutation($_id: String!, $campos: camposProyecto!) {\n    editarProyecto(_id: $_id, campos: $campos) {\n      _id\n      estado\n    }\n  }\n`;\n\nconst CREAR_PROYECTO = gql`\n  mutation CrearProyecto(\n    $nombre: String!\n    $presupuesto: Float!\n    $fechaInicio: Date!\n    $fechaFin: Date!\n    $lider: String!\n    $objetivos: [crearObjetivo]\n  ) {\n    crearProyecto(\n      nombre: $nombre\n      presupuesto: $presupuesto\n      fechaInicio: $fechaInicio\n      fechaFin: $fechaFin\n      lider: $lider\n      objetivos: $objetivos\n    ) {\n      _id\n    }\n  }\n`;\n\nconst EDITAR_PROYECTO_FASE_ESTADO = gql`\n  mutation ProyectoFaseEstado(\n    $_id: String!, \n    $estado: Enum_EstadoProyecto!, \n    $fase: Enum_FaseProyecto!\n  ) {\n    proyectoFaseEstado(\n      _id: $_id, \n      estado: $estado, \n      fase: $fase\n    ) {\n      _id\n      estado\n      fase\n  }\n}\n`;\n\nconst ELIMINAR_OBJETIVO = gql`\n  mutation EliminarObjetivo($idProyecto: String!, $idObjetivo: String!) {\n  eliminarObjetivo(idProyecto: $idProyecto, idObjetivo: $idObjetivo) {\n    _id\n  }\n}\n`;\n\nconst EDITAR_OBJETIVO = gql`\n  mutation EditarObjetivo($idProyecto: String!, $indexObjetivo: Int!, $campos: camposObjetivo!) {\n  editarObjetivo(idProyecto: $idProyecto, indexObjetivo: $indexObjetivo, campos: $campos) {\n    _id\n  }\n}\n`;\n\nexport { EDITAR_PROYECTO, CREAR_PROYECTO, EDITAR_PROYECTO_FASE_ESTADO, ELIMINAR_OBJETIVO, EDITAR_OBJETIVO };\n","import React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\n\nconst DropDown = ({ label, name, defaultValue = '', required, options }) => {\n  const [selectedValue, setSelectedValue] = useState(defaultValue);\n  const optionsSelect = [['', 'Seleccione una opción', true], ...Object.entries(options)];\n  useEffect(() => {\n    setSelectedValue(defaultValue);\n  }, [defaultValue]);\n  return (\n    <label htmlFor={name} className='flex flex-col my-3'>\n      <span>{label}</span>\n      <select\n        required={required}\n        name={name}\n        className='input form-select'\n        value={selectedValue}\n        onChange={(e) => setSelectedValue(e.target.value)}\n      >\n        {optionsSelect.map((o) => {\n          return (\n            <option key={nanoid()} value={o[0]} disabled={o[2] ?? false}>\n              {o[1]}\n            </option>\n          );\n        })}\n      </select>\n    </label>\n  );\n};\n\nexport default DropDown;","const Enum_Rol = {\n  ADMINISTRADOR: \"Administrador\",\n  ESTUDIANTE: \"Estudiante\",\n  LIDER: \"Líder\",\n};\n\nconst Enum_EstadoUsuario = {\n  PENDIENTE: \"Pendiente\",\n  AUTORIZADO: \"Autorizado\",\n  NO_AUTORIZADO: \"No autorizado\",\n};\n\nconst Enum_EstadoProyecto = {\n  ACTIVO: \"Activo\",\n  INACTIVO: \"Inactivo\",\n};\n\nconst Enum_FaseProyecto = {\n  INICIADO: 'Iniciado',\n  DESARROLLO: 'Desarrollo',\n  TERMINADO: 'Terminado',\n  NULO: 'Nulo',\n}\n\nconst Enum_TipoObjetivo = {\n  GENERAL: \"General\",\n  ESPECIFICO: \"Específico\",\n};\n\nexport { Enum_Rol, Enum_EstadoUsuario, Enum_EstadoProyecto, Enum_TipoObjetivo, Enum_FaseProyecto };\n","import React, { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_PROYECTO } from '../../graphql/proyectos/queries';\nimport ButtonLoading from \"components/ButtonLoading\";\nimport useFormData from \"hooks/useFormData\";\nimport { EDITAR_PROYECTO_FASE_ESTADO } from '../../graphql/proyectos/mutations';\nimport { toast } from \"react-toastify\";\nimport DropDown from \"components/Dropdown\";\nimport { Enum_EstadoProyecto, Enum_FaseProyecto } from \"../../utils/enums\";\nimport { useNavigate } from \"react-router\";\n\n\n\nconst EditarEstadoFase = () => {\n\n    const navigate = useNavigate();\n\n    const { form, formData, updateFormData } = useFormData(null);\n\n    const { _id } = useParams();\n\n    const { data: queryData, error: queryError, loading: queryLoading, } = useQuery(GET_PROYECTO, {\n        variables: { _id },\n    });\n\n    const [ editarProyectoFaseEstado, { data: mutationData, loading: mutationLoading, error: mutationError }, ] = useMutation(EDITAR_PROYECTO_FASE_ESTADO);\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        console.log(\"fd\", formData);\n        // delete formData.rol;\n        editarProyectoFaseEstado({\n          variables: { _id, ...formData },\n        });\n      };\n\n      useEffect(() => {\n        if (mutationData) {\n          toast.success(\"El Proyecto se editó Exitosamente!!\");\n          navigate(\"/proyectosAdmin\");\n        }\n      }, [mutationData]);\n\n      useEffect(() => {\n        if (mutationError) {\n          toast.error(\"Error modificando el proyecto\");\n        }\n\n        if (queryError) {\n          toast.error(\"Error consultando el proyecto\");\n        }\n      }, [queryError, mutationError]);\n\n    if (queryLoading) return <h1 className=\"text-center display-1 h1\"> Cargando!!</h1>\n\n    return (\n\n      <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n        <div className=\"flew flex-col w-full h-full items-center justify-center p-11\">\n            {/* <Link to='/usuarios'>\n                    <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\n                </Link> */}\n            {/* <button type=\"button\" class=\"btn btn-outline-primary\">\n            <Link to=\"/proyectosAdmin\">Atras </Link>\n            </button> */}\n            <h1 className=\"text-7xl text-gray-900 text-white font-medium tracking-tight text-center\">\n            Editar Estado Y Fase De Proyecto\n            </h1>\n\n            <form \n                onSubmit={submitForm}\n                onChange={updateFormData}\n                ref={form}\n            >\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            {/* Column1 */}\n                            {/* <Input label=\"Nombre:\" type=\"text\" name=\"nombre\" defaultValue={queryData.Proyecto.nombre} required={true} disabled readonly /> */}\n                            <h6 className=\"text-center p-3 font-bold\" >Nombre Del Proyecto</h6>\n                            <input className =\"form-control text-center\" type=\"text\" name=\"nombre\" defaultValue={queryData.ProyectoEstadoFase.nombre}  disabled readonly />\n                            <h6 className=\"text-center p-1 mt-2 font-bold\" >Fecha Inicio Proyecto</h6>\n                            <input className =\"form-control text-center\" type=\"text\" name=\"fechaInicio\" defaultValue={queryData.ProyectoEstadoFase.fechaInicio}  disabled readonly />\n                            <DropDown label=\"Estado Del Proyecto:\" name=\"estado\" defaultValue={queryData.ProyectoEstadoFase.estado} required={true} options={Enum_EstadoProyecto} />\n\n                        </div>\n                        <div class=\"col\">\n                            {/* Column2 */}\n                            {/* <Input label=\"Presupuesto:\" type=\"text\" name=\"presupuesto\" defaultValue={queryData.Proyecto.presupuesto} required={true} /> */}\n                            <h6 className=\"text-center p-3 font-bold\" >Presupuesto Del Proyecto</h6>\n                            <input className =\"form-control text-center\" type=\"text\" name=\"presupuesto\" defaultValue={queryData.ProyectoEstadoFase.presupuesto}  disabled readonly />\n                            <h6 className=\"text-center p-1 mt-2 font-bold\" >Fecha Fin Proyecto</h6>\n                            <input className =\"form-control text-center\" type=\"text\" name=\"fechaFin\" defaultValue={queryData.ProyectoEstadoFase.fechaFin}  disabled readonly />\n                            <DropDown label=\"Fase Del Proyecto:\" name=\"fase\" defaultValue={queryData.ProyectoEstadoFase.fase} required={true} options={Enum_FaseProyecto} />\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"container d-flex justify-content-center mt-5\">\n                    {/* <ButtonLoading disabled={false} loading={false} text=\"Confirmar Cambio\" /> */}\n                    <ButtonLoading disabled={Object.keys(formData).length === 0} loading={mutationLoading} text=\"Confirmar Cambio\" />\n                    {/* <button type=\"button\" class=\"btn btn-outline-primary\"> <Link to=\"/proyectosAdmin\">Atras </Link> </button> */}\n                </div>\n                <div className=\"container d-flex justify-content-center mt-5\">\n                    {/* <ButtonLoading disabled={false} loading={false} text=\"Confirmar Cambio\" /> */}\n                    {/* <ButtonLoading disabled={Object.keys(formData).length === 0} loading={mutationLoading} text=\"Confirmar Cambio\" /> */}\n                    <button type=\"button\" class=\"btn btn-outline-primary bg-gradient-r green-100 text-white text-bold\"> <Link to=\"/proyectosAdmin\">Atras </Link> </button>\n                </div>\n            </form>\n\n\n\n\n\n        </div>\n        </div>\n    )\n}\n\nexport default EditarEstadoFase;","import { gql } from \"@apollo/client\";\n\nconst GET_PROYECTOS_LIDER = gql`\n  query ProyectosPorLider($id: String!) {\n    ProyectosPorLider(_id: $id) {\n      _id\n      nombre\n      fechaInicio\n      presupuesto\n      fechaFin\n      estado\n      fase\n      lider {\n        nombre\n        apellido\n      }\n    }\n  }\n`;\n\nconst GET_PROYECTOS_DETALLE = gql`\n  query ProyectosPorId($_id: String!) {\n    ProyectosPorId(_id: $_id) {\n      _id\n      nombre\n      presupuesto\n      fechaInicio\n      fechaFin\n      estado\n      fase\n      objetivos {\n        _id\n        descripcion\n        tipo\n      }\n      avances {\n        _id\n        fecha\n        descripcion\n        observaciones\n      }\n      inscripciones {\n        _id\n        estudiante {\n        _id\n        nombre\n        apellido\n        identificacion\n        correo\n      }\n        fechaIngreso\n        estado\n      }\n    }\n  }\n`;\n\nexport { GET_PROYECTOS_LIDER, GET_PROYECTOS_DETALLE };\n","// import React from \"react\";\n// import PrivateRoute from \"components/PrivateRoute\";\n\n// const IndexProyectosLider = () => {\n//   return (\n//     <div>\n//       <PrivateRoute roleList={[\"LIDER\"]}>\n//         <h1 className=\"text-center display-1 h1 pt-10 \">\n//           Traer Proyectos Lider\n//         </h1>\n//       </PrivateRoute>\n//     </div>\n//   );\n// };\n\n// export default IndexProyectosLider;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PROYECTOS_LIDER } from \"graphql/proyectosLider/queries\";\nimport { toast } from \"react-toastify\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useUser } from \"context/userContext\";\nimport PrivateRoute from \"components/PrivateRoute\";\n\nconst IndexProyectosLider = () => {\n  //   const { _id } = useParams();\n\n  const { userData } = useUser();\n  const [IdLider, setIdLider] = useState(\"\");\n\n  useEffect(() => {\n    // const liderId = '\"' + userData._id + '\"';\n    // console.log(\"IdFront\", liderId);\n    setIdLider(userData._id);\n    // console.log(\"IdState\", IdLider);\n  }, [userData]);\n\n  //   setIdLider(userData._id);\n  //   console.log(\"IdState2\", IdLider);\n\n  //FUNCION PARA TRAER PROYECTOS POR LIDER\n  const { data, loading, error } = useQuery(GET_PROYECTOS_LIDER, {\n    // variables: {\n    //   id: \"61b79c8acab37ce3d6d26400\",\n    // },\n    variables: {\n      id: IdLider,\n    },\n  });\n\n  useEffect(() => {\n    console.log(\"data servidor \", data);\n  }, [data]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(\"Error en la consulta de Proyectos\");\n    }\n  }, [error]);\n\n  if (loading) return <h1 className=\"text-center display-1 h1\"> Cargando!!</h1>;\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div>\n      <PrivateRoute roleList={[\"LIDER\"]}>\n      <div className='flex w-full items-center justify-center'>\n          <h1 className='text-7xl text-gray-900 text-white font-medium tracking-tight'>Mis Proyectos</h1>\n        </div>\n        <div class=\"container pt-10\">\n          <table class=\"table table-success table-striped table-hover align-middle table-bordered \">\n            <thead>\n              <tr>\n                <th scope=\"col\">ID PROYECTO</th>\n                <th scope=\"col\">NOMBRE PROYECTO</th>\n                <th scope=\"col\">PRESUPUESTO</th>\n                <th scope=\"col\">INICIO</th>\n                <th scope=\"col\">FIN</th>\n                <th scope=\"col\">FASE</th>\n                <th scope=\"col\">ESTADO</th>\n                <th scope=\"col\">LIDER</th>\n                <th scope=\"col\">OPCIONES</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data &&\n                data.ProyectosPorLider.map((u) => {\n                  return (\n                    <tr key={u._id}>\n                      {/* <th scope=\"row\" className=\"text-center\">{u._id.slice(20)}</th> */}\n                      <td class=\"text-center\">{u._id.slice(20)}</td>\n                      <td class=\"text-center\">{u.nombre}</td>\n                      <td class=\"text-center\">{u.presupuesto}</td>\n                      <td class=\"text-center\">{u.fechaInicio}</td>\n                      <td class=\"text-center\">{u.fechaFin}</td>\n                      <td class=\"text-center\">{u.fase}</td>\n                      <td class=\"text-center\">{u.estado}</td>\n                      <td className=\"text-center\">{u.lider.apellido}</td>\n                      <td\n                        class=\"d-flex justify-content-around align-items-center\"\n                        style={{ color: \"red\", height: \"75px\" }}\n                      >\n                        <Link to={`/proyectosLider/detalle/${u._id}`}>\n                          <i class=\"fas fa-eye input-group justify-content-around \"></i>\n                        </Link>\n                        {/* <Link to={`/proyecto/mostrar/${u._id}`}>\n                          <i class=\"fas fa-pen input-group justify-content-around \"></i>\n                        </Link> */}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </PrivateRoute>\n    </div>\n    </div>\n  );\n};\n\nexport default IndexProyectosLider;\n","import { gql } from \"@apollo/client\";\n\nconst CREAR_INSCRIPCION = gql`\n  mutation Mutation($proyecto: String!, $estudiante: String!) {\n    crearInscripcion(proyecto: $proyecto, estudiante: $estudiante) {\n      _id\n    }\n  }\n`;\n\nconst APROBAR_INSCRIPCION = gql`\n  mutation AprobarInscripcion($aprobarInscripcionId: String!) {\n    aprobarInscripcion(id: $aprobarInscripcionId) {\n      _id\n    }\n  }\n`;\n\nconst RECHAZAR_INSCRIPCION = gql`\n\nmutation RechazarInscripcion($rechazarInscripcionId: String!) {\n  rechazarInscripcion(id: $rechazarInscripcionId) {\n    _id\n  }\n}\n\n`;\n\nexport { CREAR_INSCRIPCION, APROBAR_INSCRIPCION, RECHAZAR_INSCRIPCION };\n","import { gql } from '@apollo/client';\n\nconst EDITAR_PROYECTO_LIDER = gql`\nmutation EditarProyecto(\n    $_id: String!\n    $nombre: String!\n    $presupuesto: Float!\n    ){\n    editarProyecto(\n        _id : $_id\n        campos:{\n        nombre : $nombre\n        presupuesto : $presupuesto\n        }\n    ){\n        _id\n        nombre\n        presupuesto\n        fechaInicio\n        fechaFin\n        estado\n        fase\n        objetivos {\n            _id\n            descripcion\n            tipo\n        }\n    }\n    }\n`;\n\n\nconst ADD_OBSERVACION_AVANCE = gql`\nmutation Mutation($_id: String!, $observaciones: String) {\n    editarAvanceObs(_id: $_id, observaciones: $observaciones) {\n      _id\n      observaciones\n    }\n  }\n`;\n\nconst EDITAR_OBJETIVO = gql `\nmutation Mutation($idProyecto: String!, $indexObjetivo: Int!, $campos: camposObjetivo!) {\n    editarObjetivo(idProyecto: $idProyecto, indexObjetivo: $indexObjetivo, campos: $campos) {\n      objetivos {\n        _id\n        descripcion\n        tipo\n      }\n    }\n  }\n`;\n\n\nexport { EDITAR_PROYECTO_LIDER , ADD_OBSERVACION_AVANCE, EDITAR_OBJETIVO};","import React, {useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { toast } from \"react-toastify\";\nimport { GET_PROYECTOS_DETALLE } from \"graphql/proyectosLider/queries\";\nimport PrivateRoute from \"components/PrivateRoute\";\nimport {\n  APROBAR_INSCRIPCION,\n  RECHAZAR_INSCRIPCION,\n} from \"graphql/inscripciones/mutaciones\";\nimport ButtonLoading from \"components/ButtonLoading\";\nimport {EDITAR_PROYECTO_LIDER} from \"graphql/proyectosLider/mutations\"\nimport {ADD_OBSERVACION_AVANCE} from \"graphql/proyectosLider/mutations\"\nimport {EDITAR_OBJETIVO} from \"graphql/proyectosLider/mutations\"\nimport useFormData from \"hooks/useFormData\";\nimport { useNavigate } from \"react-router\";\n\nconst ProyectosDetalle = () => {\n\n  const navigate = useNavigate();\n  const { form, formData, updateFormData } = useFormData(null);\n  const { _id } = useParams();\n  \n  /* const {data: queryData, error: queryError, loading: queryLoading} = useQuery(GET_USUARIO, {\n        variables: {_id},\n    }); */\n\n    const [\n      editarProyecto,\n      { data: mutationData3, loading: mutationLoading3, error: mutationError3 },\n    ] = useMutation(EDITAR_PROYECTO_LIDER);\n    \n    // agregar observación\n    const [\n      editarAvanceObs,\n      { data: mutationData4, loading: mutationLoading4, error: mutationError4 },\n    ] = useMutation(ADD_OBSERVACION_AVANCE);\n    \n    const [\n      editarObjetivo,\n      { data: mutationData5, loading: mutationLoading5, error: mutationError5 },\n    ] = useMutation(EDITAR_OBJETIVO);\n  \n    useEffect(() => {\n      if (mutationData3) {\n          \n        inhabilitarInputs();\n        toast.success('El proyecto se editó Exitosamente!!');\n        /* formData=0 */\n  \n      }\n    }, [mutationData3]);\n\n    useEffect(() => {\n      if (mutationData4) {\n        toast.success('Avance agregado Exitosamente!!');\n      }\n    }, [mutationData4]);\n\n\n  const {\n    data: queryData2,\n    error: queryError,\n    loading: queryLoading2, refetch,\n  } = useQuery(GET_PROYECTOS_DETALLE, {\n    variables: { _id },\n  });\n\n  /* useEffect(() => {\n        if (mutationData) {\n          toast.success('El Usuario se editó Exitosamente!!');\n        }\n      }, [mutationData]);\n\n    useEffect(() => {\n    if (mutationError) {\n        toast.error('Error modificando el usuario');\n    }\n\n    if (queryError) {\n        toast.error('Error consultando el usuario');\n    }\n    }, [queryError, mutationError]);\n  */\n\n  const [\n    aprobarInscripcion,\n    {\n      data: aprobarData,\n      loading: aprobarLoading,\n      error: aprobarError,\n    },\n  ] = useMutation(APROBAR_INSCRIPCION);\n\n  const cambiarEstadoInscripcion = (idInscripcion) => {\n    aprobarInscripcion({\n      variables: {\n        aprobarInscripcionId: idInscripcion,\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (aprobarData) {\n      toast.success(\"Inscripcion aprobada con exito\");\n      refetch();\n    }\n  }, [aprobarData]);\n\n  useEffect(() => {\n    if (aprobarError) {\n      toast.error(\"Error aprobando la inscripcion\");\n    }\n  }, [aprobarError]);\n\n  const [\n    rechazarInscripcion,\n    { data: rechazarData, loading: rechazarLoading, error: rechazarError },\n  ] = useMutation(RECHAZAR_INSCRIPCION);\n\n  const cambiarRechazoInscripcion = (idInscripcion) => {\n    rechazarInscripcion({\n      variables: {\n        rechazarInscripcionId: idInscripcion,\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (rechazarData) {\n      toast.success(\"Inscripcion Rechazada con exito\");\n      refetch();\n    }\n  }, [rechazarData]);\n\n  useEffect(() => {\n    if (rechazarError) {\n      toast.error(\"Error rechazando la inscripcion\");\n    }\n  }, [rechazarError]);\n\n  if (rechazarLoading)\n    return <h1 className=\"text-center display-1 h1\"> Cargando!!</h1>;\n\n  if (aprobarLoading)\n    return <h1 className=\"text-center display-1 h1\"> Cargando!!</h1>;\n\n  if (queryLoading2)\n    return <h1 className=\"text-center display-1 h1\"> Cargando!!</h1>;\n\n  const habilitarEdicionProyecto = ()=>{\n    document.querySelector(\".editElement\").disabled=false;\n    document.querySelector(\".editElement2\").disabled=false;\n    document.querySelector(\"#BtnEditar\").style.display='none';\n    document.querySelector(\"#btnGuardarProyecto\").style.display='block';\n  }\n\n  const submitForm = (e)=>{\n    e.preventDefault();\n    formData.presupuesto = parseFloat(formData.presupuesto);\n    console.log(formData);\n    editarProyecto({\n        variables: { _id, ...formData },\n      });\n  }\n\n \n\n  const inhabilitarInputs = ()=>{\n    document.querySelector(\".editElement\").disabled=true;\n    document.querySelector(\".editElement2\").disabled=true;\n    document.querySelector(\"#BtnEditar\").style.display='block';\n    document.querySelector(\"#btnGuardarProyecto\").style.display='none';\n   }    \n\n   // adicionar observaciones\n   const obtenerAvance = (e)=>{\n      document.querySelector(\"#idAvance\").value = e.target.value;\n      document.querySelector(\"#idAvanceInput\").value = '';\n   }\n\n\n   const guardarObservacionAvance = ()=>{\n    let _id = (document.querySelector(\"#idAvance\").value).toString();\n    let observaciones = (document.querySelector(\"#idAvanceInput\").value).toString();\n    editarAvanceObs({\n      variables: { _id, observaciones },\n    })\n   }\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div>\n\n{/* <!-- Modal --> */}\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">REGISTRO DE OBSERVACIONES</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <label>ID Avance: </label>\n        <input type=\"text\" id=\"idAvance\" style={{color:\"blue\"}}/>\n        <div class=\"mb-3 col-lg-10 m-3\">\n          <label for=\"exampleFormControlInput1\" class=\"form-label\">\n            Observación\n          </label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"idAvanceInput\"\n          />\n        </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\n        <button type=\"button\" data-bs-dismiss=\"modal\" onClick={guardarObservacionAvance} class=\"btn btn-primary\">Guardar</button>\n      </div>\n    </div>\n  </div>\n</div>\n    {/* fin modal */}\n\n\n      <PrivateRoute roleList={[\"LIDER\"]}>\n        <div class=\"col-lg-11 m-10 d-flex flex-wrap align-items-start\">\n          <button type=\"button\" class=\"btn btn-outline-primary\">\n            <div className=\"bg-gradient-r green-100 text-white text-bold\">\n            <Link to=\"/proyectosLider/index\">Atras </Link>\n            </div>\n          </button>\n          <br />\n          <br />\n          <h2 class=\"col-lg-12 mb-3 bg-info p-1\">\n            <strong>PROYECTO SELECCIONADO</strong>\n          </h2>\n          <div class=\"accordion col-lg-12\" id=\"accordionExample\">\n            <div class=\"accordion-item\">\n              <h2 class=\"accordion-header\" id=\"headingOne\">\n                <button\n                  class=\"accordion-button\"\n                  type=\"button\"\n                  data-bs-toggle=\"collapse\"\n                  data-bs-target=\"#collapseOne\"\n                  aria-expanded=\"true\"\n                  aria-controls=\"collapseOne\"\n                >\n                  PROYECTO\n                </button>\n              </h2>\n              <div\n                id=\"collapseOne\"\n                class=\"accordion-collapse collapse show\"\n                aria-labelledby=\"headingOne\"\n                data-bs-parent=\"#accordionExample\"\n              >\n                <div class=\"accordion-body d-flex flex-wrap\">\n                  <form\n                    onSubmit={submitForm} \n                    onChange={updateFormData}\n                    ref={form}\n                    className=\"d-flex flex-wrap\"\n                  >\n                  <div class=\"mb-3 col-lg-3 m-3\">\n                    <label for=\"exampleFormControlInput1\" class=\"form-label\">\n                      Id Proyecto\n                    </label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      value={_id}\n                      disabled\n                    />\n                  </div>\n                  <div class=\"mb-3 col-lg-3 m-3\">\n                    <label for=\"exampleFormControlInput1\" class=\"form-label\">\n                      Nombre proyecto\n                    </label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control editElement\"\n                      name=\"nombre\"\n                      defaultValue={queryData2.ProyectosPorId[0].nombre}\n                      disabled\n                    />\n                  </div>\n                  <div class=\"mb-3 col-lg-3 m-3\">\n                    <label for=\"exampleFormControlInput1\" class=\"form-label\">\n                      Presupuesto\n                    </label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control editElement2\"\n                      name=\"presupuesto\"\n                      defaultValue={queryData2.ProyectosPorId[0].presupuesto}\n                      disabled\n                    />\n                  </div>\n                  <div class=\"mb-3 col-lg-3 m-3\">\n                    <label for=\"exampleFormControlInput1\" class=\"form-label\">\n                      Fecha inicio\n                    </label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      value={queryData2.ProyectosPorId[0].fechaInicio}\n                      disabled\n                    />\n                  </div>\n                  <div class=\"mb-3 col-lg-3 m-3\">\n                    <label for=\"exampleFormControlInput1\" class=\"form-label\">\n                      Fecha fin\n                    </label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      value={queryData2.ProyectosPorId[0].fechaFin}\n                      disabled\n                    />\n                  </div>\n                  <div class=\"mb-3 col-lg-3 m-3\">\n                    <label for=\"exampleFormControlInput1\" class=\"form-label\">\n                      Estado\n                    </label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      defaultValue={queryData2.ProyectosPorId[0].estado}\n                      disabled\n                    />\n                  </div>\n                  \n                  <div class=\"mb-3 col-lg-3 m-3\">\n                    <button type=\"button\" id=\"BtnEditar\" onClick={habilitarEdicionProyecto} class=\"btn btn-primary\">Editar</button>\n                    <button type=\"submit\" id=\"btnGuardarProyecto\" style={{display:'none'}} class=\"btn btn-warning\">Guardar cambios</button>\n                  </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            <div class=\"accordion-item\">\n              <h2 class=\"accordion-header\" id=\"headingTwo\">\n                <button\n                  class=\"accordion-button collapsed\"\n                  type=\"button\"\n                  data-bs-toggle=\"collapse\"\n                  data-bs-target=\"#collapseTwo\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"collapseTwo\"\n                >\n                  OBJETIVOS\n                </button>\n              </h2>\n              <div\n                id=\"collapseTwo\"\n                class=\"accordion-collapse collapse\"\n                aria-labelledby=\"headingTwo\"\n                data-bs-parent=\"#accordionExample\"\n              >\n                <div class=\"accordion-body\">\n                  <br/>\n                  <table class=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">ID OBJETIVO</th>\n                        <th scope=\"col\">TIPO</th>\n                        <th scope=\"col\">DESCRIPCIÓN</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {queryData2 &&\n                        queryData2.ProyectosPorId[0].objetivos.map((u) => {\n                          return (\n                            <tr key={u._id}>\n                              <td class=\"text-center\">{u._id.slice(20)}</td>\n                              <td class=\"text-center\">{u.tipo}</td>\n                              <td class=\"text-center\">{u.descripcion}</td>\n                            </tr>\n                          );\n                        })}\n                    </tbody>\n                  </table>\n                  <br/>\n                </div>\n              </div>\n            </div>\n            <div class=\"accordion-item\">\n              <h2 class=\"accordion-header\" id=\"headingThree\">\n                <button\n                  class=\"accordion-button collapsed\"\n                  type=\"button\"\n                  data-bs-toggle=\"collapse\"\n                  data-bs-target=\"#collapseThree\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"collapseThree\"\n                >\n                  AVANCES\n                </button>\n              </h2>\n              <div\n                id=\"collapseThree\"\n                class=\"accordion-collapse collapse\"\n                aria-labelledby=\"headingThree\"\n                data-bs-parent=\"#accordionExample\"\n              >\n                <div class=\"accordion-body\">\n                  <table className=\"table table-striped table-hover align-middle table-bordered bg-gray-100\">\n                    <thead className=\"tabla\">\n                      <tr>\n                        <th scope=\"col\" className=\"text-center \">\n                          ID AVANCE\n                        </th>\n                        {/* <th scope=\"col\">TIPO</th> */}\n                        <th scope=\"col\" className=\"text-center\">\n                          DESCRIPCIÓN\n                        </th>\n                        <th scope=\"col\" className=\"text-center\">\n                          OBSERVACIONES\n                        </th>\n                        <th scope=\"col\" className=\"text-center\">\n                          OPCIONES\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {queryData2 &&\n                        queryData2.ProyectosPorId[0].avances.map((u) => {\n                          return (\n                            <tr key={u._id}>\n                              <td class=\"text-center\">{u._id.slice(20)}</td>\n                              {/* <td class=\"text-center\">{u.fechaAvance}</td> */}\n                              <td class=\"text-center\">{u.descripcion}</td>\n                              <td class=\"text-center\">\n                                <ul>\n                                {\n                                  u.observaciones.map((obs)=>{\n                                    return (\n                                     <li>{obs}</li> \n                                    )\n                                  })\n                                }\n                                </ul>\n                                </td>\n                                <td class=\"d-flex justify-center\">\n                                {<button type=\"button\" onClick={obtenerAvance} value={u._id} class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n                                  Adicionar\n                                </button>}\n                              </td>\n                            </tr>\n                          );\n                        })}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"accordion-item\">\n              <h2 class=\"accordion-header\" id=\"headingFour\">\n                <button\n                  class=\"accordion-button collapsed\"\n                  type=\"button\"\n                  data-bs-toggle=\"collapse\"\n                  data-bs-target=\"#collapseFour\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"collapseFour\"\n                >\n                  INSCRIPCIONES\n                </button>\n              </h2>\n              <div\n                id=\"collapseFour\"\n                class=\"accordion-collapse collapse\"\n                aria-labelledby=\"headingFour\"\n                data-bs-parent=\"#accordionExample\"\n              >\n                <div class=\"accordion-body\">\n                  <table class=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">ID INSCRIPCIÓN</th>\n                        <th scope=\"col\">ESTUDIANTE</th>\n                        <th scope=\"col\">FECHA INGRESO</th>\n                        <th scope=\"col\">ESTADO</th>\n                        <th scope=\"col\">OPCIONES</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {queryData2 &&\n                        queryData2.ProyectosPorId[0].inscripciones.map((u) => {\n                          return (\n                            <tr key={u._id}>\n                              <td class=\"text-center align-middle\">\n                                {u._id.slice(20)}\n                              </td>\n                              <td class=\"text-center align-middle\">\n                                {[\n                                  u.estudiante._id.slice(20),\n                                  \" - \",\n                                  u.estudiante.nombre,\n                                  \" \",\n                                  u.estudiante.apellido,\n                                  \" - \",\n                                  u.estudiante.correo,\n                                ]}\n                              </td>\n                              <td class=\"text-center align-middle\">\n                                {u.fechaIngreso}\n                              </td>\n                              <td class=\"text-center align-middle\">\n                                {u.estado}\n                              </td>\n                              <td class=\"text-center\">\n                                {u.estado === \"PENDIENTE\" && (\n                                  <ButtonLoading\n                                    onClick={() => {\n                                      cambiarEstadoInscripcion(u._id);\n                                    }}\n                                    text=\"Aceptar\"\n                                    loading={false}\n                                    disabled={false}\n                                  />\n                                )}\n                                {u.estado === \"RECHAZADO\" && (\n                                  <ButtonLoading\n                                    onClick={() => {\n                                      cambiarEstadoInscripcion(u._id);\n                                    }}\n                                    text=\"Aceptar\"\n                                    loading={false}\n                                    disabled={false}\n                                  />\n                                )}\n                                {u.estado === \"ACEPTADO\" && (\n                                  <ButtonLoading\n                                    onClick={() => {\n                                      cambiarRechazoInscripcion(u._id);\n                                    }}\n                                    text=\"Rechazar\"\n                                    loading={false}\n                                    disabled={false}\n                                  />\n                                )}\n                              </td>\n                            </tr>\n                          );\n                        })}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PrivateRoute>\n    </div>\n    </div>\n  );\n};\n\nexport default ProyectosDetalle;\n","import { gql } from \"@apollo/client\";\n\nconst GET_PROYECTOS_USUARIO = gql`\n  query Proyectos {\n    Proyectos {\n      nombre\n      _id\n      presupuesto\n      fechaInicio\n      fechaFin\n      estado\n      fase\n      lider {\n        nombre\n        correo\n      }\n    }\n  }\n`;\n\nconst PROYECTOS = gql`\n  query Proyectos {\n    Proyectos {\n      _id\n      nombre\n      presupuesto\n      fechaInicio\n      fechaFin\n      estado\n      fase\n      lider {\n        _id\n        nombre\n        correo\n      }\n      objetivos {\n        descripcion\n        tipo\n      }\n      inscripciones {\n        estado\n        estudiante {\n          _id\n          nombre\n        }\n      }\n    }\n  }\n`;\n\nconst GET_PROYECTO_INSCRIPCION = gql`\n  query ProyectosPorId($_id: String!) {\n    ProyectosPorId(_id: $_id) {\n      _id\n      estado\n      nombre\n      inscripciones {\n        estado\n        estudiante {\n          _id\n          nombre\n        }\n      }\n    }\n  }\n`;\n\nconst GET_PROYECTOS_INSCRITOS = gql`\n  query ProyectosInscritos($id: String!) {\n    ProyectosInscritos(_id: $id) {\n      _id\n      estado\n      proyecto {\n        _id\n        nombre\n        lider {\n          nombre\n        }\n      }\n      estudiante {\n        nombre\n        apellido\n      }\n    }\n  }\n`;\n\nconst GET_AVANCES = gql`\n  query FiltrarAvance($_id: String!) {\n    filtrarAvance(_id: $_id) {\n      _id\n      fecha\n      descripcion\n      proyecto {\n        nombre\n      }\n      observaciones\n      creadoPor {\n        nombre\n        apellido\n        estado\n      }\n    }\n  }\n`;\n\nconst GET_AVANCE = gql`\n  query Avance($_id: String!) {\n    Avance(_id: $_id) {\n      fecha\n      descripcion\n      _id\n      observaciones\n    }\n  }\n`;\n\nexport {\n  GET_PROYECTOS_USUARIO,\n  GET_PROYECTO_INSCRIPCION,\n  GET_PROYECTOS_INSCRITOS,\n  GET_AVANCES,\n  GET_AVANCE,\n  PROYECTOS,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PROYECTOS_INSCRITOS } from \"graphql/proyectosEstudiante/queries\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport { useUser } from \"context/userContext\";\nimport PrivateRoute from \"components/PrivateRoute\";\n\nconst IndexProyectosEstudiante = () => {\n  const { userData } = useUser();\n  const [IdEstudiante, setIdEstudiante] = useState(\"\");\n\n  useEffect(() => {\n    setIdEstudiante(userData._id);\n  }, [userData]);\n\n  const { data, loading, error, refetch } = useQuery(GET_PROYECTOS_INSCRITOS, {\n    variables: {\n      id: IdEstudiante,\n    },\n  });\n\n  useEffect(() => {\n    console.log(\"data servidor \", data);\n    refetch();\n  }, [data]);\n\n  // useEffect(() => {\n  //   if (data) {\n  //     toast.success(\"Inscripción creada con exito\");\n  //     refetch();\n  //   }\n  // }, [data]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(\"Error en la consulta de Proyectos\");\n    }\n  }, [error]);\n\n  if (loading) return <h1 className=\"text-center display-1 h1\"> Cargando!!</h1>;\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div>\n      <PrivateRoute roleList={[\"ESTUDIANTE\"]}>\n        <br />\n        <br />\n        <div className=\"text-7xl text-gray-900 text-white font-medium tracking-tight text-center\">\n          <h1>Mis Proyectos Inscritos </h1>\n        </div>\n        <div class=\"container pt-10\">\n          <table class=\"table table-success table-striped table-hover align-middle table-bordered \">\n            <thead className=\"tabla\">\n              <tr>\n                <th scope=\"col\" className=\"text-center\">\n                  ID Proyecto\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Nombre Proyecto\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Lider\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  ID Inscripción\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Estado Inscripción\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Nombre{\" \"}\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Apellido{\" \"}\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Opciones\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {data &&\n                data.ProyectosInscritos.map((u) => {\n                  return (\n                    <tr key={u._id}>\n                      <td class=\"text-center\">{u.proyecto._id.slice(20)}</td>\n                      <td class=\"text-center\">{u.proyecto.nombre}</td>\n                      <td class=\"text-center\">{u.proyecto.lider.nombre}</td>\n                      <td class=\"text-center\">{u._id.slice(20)}</td>\n                      <td class=\"text-center\">{u.estado}</td>\n                      <td class=\"text-center\">{u.estudiante.nombre}</td>\n                      <td class=\"text-center\">{u.estudiante.apellido}</td>\n                      <td\n                        class=\"d-flex justify-content-around align-items-center\"\n                        style={{ color: \"#1588B4\", height: \"65px\" }}\n                      >\n                        {u.estado === \"ACEPTADO\" && (\n                          <Link\n                            to={`/proyectosEstudiante/avances/${u.proyecto._id}`}\n                          >\n                            <button> Ver Avances</button>\n                            <i class=\"fas fa-eye input-group justify-content-around \"></i>\n                          </Link>\n                        )}\n                        {u.estado === \"ACEPTADO\" && (\n                          <Link\n                            to={`/proyectosEstudiante/nuevoAvance/${u.proyecto._id}`}\n                          >\n                            <button> Crear Avance</button>\n                            <i class=\"fas fa-pencil-alt input-group justify-content-around \"></i>\n                          </Link>\n                        )}\n\n                        {u.estado === \"PENDIENTE\" && (\n                          <span>Inscripción Pendiente</span>\n                        )}\n                        {u.estado === \"RECHAZADO\" && (\n                          <span> Inscripción Declinada</span>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </PrivateRoute>\n    </div>\n    </div>\n  );\n};\n\nexport default IndexProyectosEstudiante;\n","import { gql } from \"@apollo/client\";\n\nconst CREAR_INSCRIPCION = gql`\n  mutation Mutation($proyecto: String!, $estudiante: String!) {\n    crearInscripcion(proyecto: $proyecto, estudiante: $estudiante) {\n      _id\n    }\n  }\n`;\n\nconst EDITAR_AVANCE = gql`\n  mutation EditarAvance($_id: String!, $fecha: Date!, $descripcion: String!) {\n    editarAvance(_id: $_id, fecha: $fecha, descripcion: $descripcion) {\n      descripcion\n      fecha\n      _id\n      observaciones\n    }\n  }\n`;\n\nconst CREAR_AVANCE = gql`\n  mutation CrearAvance(\n    $fecha: Date!\n    $descripcion: String!\n    $proyecto: String!\n    $creadoPor: String!\n  ) {\n    crearAvance(\n      fecha: $fecha\n      descripcion: $descripcion\n      proyecto: $proyecto\n      creadoPor: $creadoPor\n    ) {\n      descripcion\n      _id\n      fecha\n      observaciones\n    }\n  }\n`;\n\nexport { CREAR_INSCRIPCION, EDITAR_AVANCE, CREAR_AVANCE };\n","import React, { useEffect, useState } from \"react\";\nimport PrivateRoute from \"components/PrivateRoute\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { useUser } from \"context/userContext\";\nimport { PROYECTOS } from \"graphql/proyectosEstudiante/queries\";\nimport { CREAR_INSCRIPCION } from \"graphql/proyectosEstudiante/mutations\";\nimport { toast } from \"react-toastify\";\nimport ButtonLoading from \"components/ButtonLoading\";\n\nconst IndexProyectosDisponibles = () => {\n  const { data, error, loading, refetch } = useQuery(PROYECTOS);\n\n  useEffect(() => {\n    console.log(\"data servidor \", data);\n    refetch();\n  }, [data]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(\"Error en la consulta de Proyectos\");\n    }\n  }, [error]);\n\n  const InscripcionProyecto = ({ idProyecto, estado, inscripciones }) => {\n    const [estadoInscripcion, setEstadoInscripcion] = useState(\"\");\n    const [crearInscripcion, { data, loading, error }] =\n      useMutation(CREAR_INSCRIPCION);\n    const { userData } = useUser();\n\n    useEffect(() => {\n      if (userData && inscripciones) {\n        const flt = inscripciones.filter(\n          (el) => el.estudiante._id === userData._id\n        );\n        if (flt.length > 0) {\n          setEstadoInscripcion(flt[0].estado);\n        }\n      }\n    }, [userData, inscripciones]);\n\n    useEffect(() => {\n      if (data) {\n        toast.success(\"Inscripción creada con exito\");\n        refetch();\n      }\n    }, [data]);\n\n    const confirmarInscripcion = () => {\n      crearInscripcion({\n        variables: { proyecto: idProyecto, estudiante: userData._id },\n      });\n    };\n\n    return (\n      <>\n        {estadoInscripcion !== \"\" ? (\n          <span className=\"text-center\">\n            Estado de <br /> inscripción: <br /> \"{estadoInscripcion}\"\n          </span>\n        ) : (\n          <ButtonLoading\n            onClick={() => confirmarInscripcion()}\n            disabled={estado === \"INACTIVO\"}\n            loading={loading}\n            text=\"Inscribirme\"\n            className=\" bg-black\"\n          />\n        )}\n      </>\n    );\n  };\n\n  if (loading)\n    return <h1 className=\"text-center display-1 h1 \"> Cargando!!</h1>;\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div>\n      <PrivateRoute roleList={[\"ESTUDIANTE\"]}>\n        <h1 className=\"text-7xl text-gray-900 text-white font-medium tracking-tight text-center\">\n          Proyectos Disponibles\n        </h1>\n        <div className=\"container pt-10\">\n          <table className=\"table table-success table-striped table-hover align-middle table-bordered  \">\n            <thead className=\"tabla\">\n              <tr className=\"\">\n                <th scope=\"col\" className=\"text-center\">\n                  ID\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Nombre\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Presupuesto\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Fecha Inicio\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Fecha Fin\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Estado\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Fase\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Lider\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Correo\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Opciones\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {data &&\n                data.Proyectos.map((u) => {\n                  return (\n                    <tr key={u._id}>\n                      <th scope=\"row\" className=\"text-center\">\n                        {u._id.slice(20)}\n                      </th>\n                      <td className=\"text-center\">{u.nombre}</td>\n                      <td className=\"text-center\">{u.presupuesto}</td>\n                      <td className=\"text-center\">\n                        {u.fechaInicio.slice(0, 10)}\n                      </td>\n                      <td className=\"text-center\">{u.fechaFin.slice(0, 10)}</td>\n                      <td className=\"text-center\">{u.estado}</td>\n                      <td className=\"text-center\">{u.fase}</td>\n                      <td className=\"text-center\">{u.lider.nombre}</td>\n                      <td className=\"text-center\">{u.lider.correo}</td>\n                      <td\n                        class=\"d-flex justify-content-around align-items-center\"\n                        style={{ color: \"#1588B4\", height: \"75px\" }}\n                      >\n                        {u.estado === \"ACTIVO\" && (\n                          <InscripcionProyecto\n                            idProyecto={u._id}\n                            estado={u.estado}\n                            inscripciones={u.inscripciones}\n                          />\n                        )}\n                        {u.estado === \"INACTIVO\" && (\n                          <span>Proyecto Inactivo</span>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </PrivateRoute>\n    </div>\n    </div>\n  );\n};\n\nexport default IndexProyectosDisponibles;\n","import React, { useEffect } from \"react\";\nimport PrivateRoute from \"components/PrivateRoute\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_AVANCES } from \"graphql/proyectosEstudiante/queries\";\nimport useFormData from \"hooks/useFormData\";\nimport ButtonLoading from \"components/ButtonLoading\";\nimport { toast } from \"react-toastify\";\n\nconst AvancesEstudiante = () => {\n  const { form, formData, updateFormData } = useFormData(null);\n  const { _id } = useParams();\n  const {\n    data: queryData,\n    error: queryError,\n    loading: queryLoading,\n  } = useQuery(GET_AVANCES, {\n    variables: { _id },\n  });\n\n  if (queryLoading)\n    return <h1 className=\"text-center display-1 h1\"> Cargando!!</h1>;\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div>\n      <PrivateRoute roleList={[\"ESTUDIANTE\"]}>\n        <div className=\"flew flex-col w-full h-full items-center justify-center p-10\">\n          <button type=\"button\" class=\"btn btn-outline-primary bg-gradient-r green-100 text-white text-bold\">\n            <Link to=\"/proyectosEstudiante/index\">Atras </Link>\n          </button>\n\n          <br />\n          <br />\n\n          <div className=\" bg-gray-100 text-bold text-center display-1 h1 pt-15\">\n            <h1>Avances </h1>\n          </div>\n\n          <br />\n          <br />\n\n          <table class=\"table table-success table-striped table-hover align-middle table-bordered \">\n            <thead className=\"tabla\">\n              <tr>\n                <th scope=\"col\" className=\"text-center\">\n                  ID Avance\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Fecha\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Descripción\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Observaciones\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  nombre\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Apellido\n                </th>\n                <th scope=\"col\" className=\"text-center\">\n                  Opciones\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {queryData &&\n                queryData.filtrarAvance.map((u) => {\n                  return (\n                    <tr key={u._id}>\n                      <th scope=\"row\" className=\"text-center\">\n                        {u._id.slice(20)}\n                      </th>\n                      <td class=\"text-center\">{u.fecha.slice(0, 10)}</td>\n                      <td class=\"text-center\">{u.descripcion}</td>\n                      <td class=\"text-center\">{u.observaciones}</td>\n                      <td class=\"text-center\">{u.creadoPor.nombre}</td>\n                      <td class=\"text-center\">{u.creadoPor.apellido}</td>\n                      <td\n                        class=\"d-flex justify-content-around align-items-center\"\n                        style={{ color: \"#1588B4\", height: \"65px\" }}\n                      >\n                        <Link to={`/proyectosEstudiante/editarAvance/${u._id}`}>\n                          <button> Editar Avance </button>\n                          <i className=\"fas fa-pencil-alt input-group justify-content-around \"></i>\n                        </Link>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </PrivateRoute>\n    </div>\n    </div>\n  );\n};\n\nexport default AvancesEstudiante;\n","import React from 'react';\n\nconst Input = ({ label, name, defaultValue, type, required }) => {\n  return (\n    <label htmlFor={name} className='flex flex-col my-3 '>\n      <span className = 'text-center '>{label}</span>\n      <input\n        required={required}\n        type={type}\n        name={name}\n        className='input form-control text-center '\n        defaultValue={defaultValue}\n      />\n    </label>\n  );\n};\n\nexport default Input;","import React, { useEffect } from \"react\";\nimport PrivateRoute from \"components/PrivateRoute\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_AVANCE } from \"graphql/proyectosEstudiante/queries\";\nimport Input from \"components/Input\";\nimport ButtonLoading from \"components/ButtonLoading\";\nimport useFormData from \"hooks/useFormData\";\nimport { toast } from \"react-toastify\";\nimport { EDITAR_AVANCE } from \"graphql/proyectosEstudiante/mutations\";\n\nconst EditarAvance = () => {\n  const { form, formData, updateFormData } = useFormData(null);\n  const { _id } = useParams();\n\n  const {\n    data: queryData,\n    error: queryError,\n    loading: queryLoading,\n    refetch,\n  } = useQuery(GET_AVANCE, {\n    variables: { _id },\n  });\n\n  const [\n    editarUsuario,\n    { data: mutationData, loading: mutationLoading, error: mutationError },\n  ] = useMutation(EDITAR_AVANCE);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    delete formData.rol;\n    editarUsuario({\n      variables: { _id, ...formData },\n    });\n  };\n\n  useEffect(() => {\n    if (mutationData) {\n      toast.success(\"Usuario modificado correctamente\");\n      refetch();\n    }\n  }, [mutationData]);\n\n  useEffect(() => {\n    if (mutationError) {\n      toast.error(\"Error modificando el usuario\");\n    }\n\n    if (queryError) {\n      toast.error(\"Error consultando el usuario\");\n    }\n  }, [queryError, mutationError]);\n\n  if (queryLoading) return <div>Cargando....</div>;\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div>\n      <PrivateRoute roleList={[\"ESTUDIANTE\"]}>\n        <div className=\"flew flex-col w-full h-full items-center justify-center p-10\">\n          <button type=\"button\" class=\"btn btn-outline-primary bg-gradient-r green-100 text-white text-bold\">\n            <Link to=\"/proyectosEstudiante/index\">Atras </Link>\n          </button>\n          <br />\n          <br />\n          <br />\n          <div className=\" bg-gray-100 text-center display-5\">\n            <h5>Editar Avance </h5>\n          </div>\n\n          <br />\n          <form\n            onSubmit={submitForm}\n            onChange={updateFormData}\n            ref={form}\n            className=\"flex flex-col items-center justify-center\"\n          >\n            <Input\n              label=\"Id del Avance\"\n              type=\"text\"\n              name=\"_id\"\n              defaultValue={queryData.Avance._id}\n              required={false}\n              disabled\n            />\n            <Input\n              label=\"Fecha\"\n              type=\"text\"\n              name=\"fecha\"\n              defaultValue={queryData.Avance.fecha.slice(0, 10)}\n              required={true}\n            />\n            <Input\n              label=\"Descripción\"\n              type=\"text\"\n              name=\"descripcion\"\n              defaultValue={queryData.Avance.descripcion}\n              required={true}\n            />\n            <Input\n              label=\"Observaciones del Tutor\"\n              type=\"text\"\n              name=\"observaciones\"\n              defaultValue={queryData.Avance.observaciones}\n              required={false}\n            />\n            <ButtonLoading\n              disabled={Object.keys(formData).length === 0}\n              loading={mutationLoading}\n              text=\"Guardar Cambios\"\n            />\n          </form>\n        </div>\n      </PrivateRoute>\n    </div>\n    </div>\n  );\n};\n\nexport default EditarAvance;\n","import React, { useEffect, useState } from \"react\";\nimport PrivateRoute from \"components/PrivateRoute\";\nimport { useMutation } from \"@apollo/client\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useUser } from \"context/userContext\";\nimport Input from \"components/Input\";\nimport { toast } from \"react-toastify\";\nimport ButtonLoading from \"components/ButtonLoading\";\nimport useFormData from \"hooks/useFormData\";\nimport { CREAR_AVANCE } from \"graphql/proyectosEstudiante/mutations\";\nimport { useNavigate } from 'react-router';\n\nconst NuevoAvance = () => {\n  \n  const navigate = useNavigate();\n\n  const { form, formData, updateFormData } = useFormData();\n  const { userData } = useUser();\n  const [IdEstudiante, setIdEstudiante] = useState(\"\");\n  const { _id } = useParams();\n\n  const [\n    crearAvance,\n    { data: mutationData, loading: mutationLoading, error: mutationError },\n  ] = useMutation(CREAR_AVANCE);\n\n  useEffect(() => {\n    console.log(\"data mutation\", mutationData);\n  });\n\n  useEffect(() => {\n    setIdEstudiante(userData._id);\n  }, [userData]);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    crearAvance({\n      variables: formData,\n    });\n  };\n\n  useEffect(() => {\n    if (mutationData) {\n      toast.success(\"Avance Creado Correctamente\");\n      navigate(\"/proyectosEstudiante/index\");\n    }\n  }, [mutationData]);\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div>\n      <PrivateRoute roleList={[\"ESTUDIANTE\"]}>\n        <div className=\"flew flex-col w-full h-full items-center justify-center p-10\">\n          <button type=\"button\" class=\"btn btn-outline-primary bg-gradient-r green-100 text-white text-bold\">\n            <Link to=\"/proyectosEstudiante/index\">Atras </Link>\n          </button>\n          <br />\n          <br />\n          <br />\n          <div className=\" bg-gray-100 text-center display-5\">\n            <h5>Crear Avance </h5>\n          </div>\n\n          <br />\n          <form\n            onSubmit={submitForm}\n            onChange={updateFormData}\n            ref={form}\n            className=\"flex flex-col items-center justify-center\"\n          >\n            <Input\n              label=\"Fecha de Creación\"\n              type=\"date\"\n              name=\"fecha\"\n              required={true}\n            />\n            <Input\n              label=\"Descripción\"\n              type=\"text\"\n              name=\"descripcion\"\n              required={true}\n            />\n            <Input\n              label=\"ID de Proyecto\"\n              type=\"text\"\n              name=\"proyecto\"\n              defaultValue={_id}\n              required={true}\n            />\n            <Input\n              label=\"ID de Estudiante\"\n              type=\"text\"\n              name=\"creadoPor\"\n              defaultValue={IdEstudiante}\n              disabled\n              required={true}\n            />\n            <ButtonLoading\n              disabled={Object.keys(formData).length === 0}\n              loading={false}\n              text=\"Crear Avance\"\n            />\n          </form>\n        </div>\n      </PrivateRoute>\n    </div>\n    </div>\n  );\n};\n\nexport default NuevoAvance;\n","import React from 'react'\n\nconst Carousel = () => {\n    return (\n        <div className='flex flex-col h-full w-full items-center justify-center'>\n            <div id=\"carouselExampleSlidesOnly\" className=\"carousel slide\" data-bs-ride=\"carousel\">\n                <div className=\"carousel-inner\">\n                    <div className=\"carousel-item active\">\n                        <img src=\"./images/01.png\" className=\"d-block w-90 \" alt=\"...\" />\n                    </div>\n                    <div className=\"carousel-item\">\n                        <img src=\"./images/02.png\" className=\"d-block w-90\" alt=\"...\" />\n                    </div>\n                    <div className=\"carousel-item\">\n                        <img src=\"./images/03.png\" className=\"d-block w-90\" alt=\"...\" />\n                    </div>\n                    <div className=\"carousel-item\">\n                        <img src=\"./images/04.png\" className=\"d-block w-90\" alt=\"...\" />\n                    </div>\n                    <div className=\"carousel-item\">\n                        <img src=\"./images/05.png\" className=\"d-block w-90\" alt=\"...\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Carousel;","import React from \"react\";\nimport Carousel from \"components/Carousel\";\n\nconst Index = () => {\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div className=\"bg-gray-100 h-100\">\n      {\" \"}\n      <h1 className=\"text-center h1\">React Soft</h1>\n      {/* <div className=\"bg-gray-100 h-96\">React Soft</div> */}\n      <Carousel />\n    </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import React from 'react';\n\nconst Page2 = () => {\n  return <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">Pagina 2</div>\n};\n\nexport default Page2;\n","import { gql } from \"@apollo/client\";\n\nconst GET_USUARIOS = gql`\n  query Query($filtro: FiltroUsuarios) {\n    Usuarios(filtro: $filtro) {\n      _id\n      nombre\n      apellido\n      correo\n      estado\n      identificacion\n      rol\n    }\n  }\n`;\n\nconst GET_USUARIO = gql`\n  query Usuario($_id: String!) {\n    Usuario(_id: $_id) {\n      _id\n      nombre\n      apellido\n      correo\n      estado\n      identificacion\n      rol\n    }\n  }\n`;\n\nexport { GET_USUARIOS, GET_USUARIO };\n","import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_USUARIOS } from \"graphql/usuarios/queries\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport { Enum_Rol, Enum_EstadoUsuario } from \"utils/enums\";\nimport PrivateRoute from \"components/PrivateRoute\";\n\nconst IndexUsuarios = () => {\n  const { data, error, loading } = useQuery(GET_USUARIOS);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(\"Error consultando los usuarios\");\n    }\n  }, [error]);\n\n  if (loading) return <div>Cargando....</div>;\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <PrivateRoute roleList={[\"ADMINISTRADOR\"]}>\n      <div>\n        <h1 className=\"text-7xl text-gray-900 text-white font-medium tracking-tight text-center\">Usuarios</h1>\n        <br />\n        <table className=\"table table-success table-striped table-hover align-middle table-bordered \">\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Apellidos</th>\n              <th>Correo</th>\n              <th>Identificación</th>\n              <th>Rol</th>\n              <th>Estado</th>\n              <th>Editar</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data && data.Usuarios ? (\n              <>\n                {data.Usuarios.map((u) => {\n                  return (\n                    <tr key={u._id}>\n                      <td>{u.nombre}</td>\n                      <td>{u.apellido}</td>\n                      <td>{u.correo}</td>\n                      <td>{u.identificacion}</td>\n                      <td>{Enum_Rol[u.rol]}</td>\n                      <td>{Enum_EstadoUsuario[u.estado]}</td>\n                      <td>\n                        <Link to={`/usuarios/editar/${u._id}`}>\n                          <i className=\"fas fa-pen text-yellow-600 hover:text-yellow-400 cursor-pointer\" />\n                        </Link>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </>\n            ) : (\n              <div>No autorizado</div>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </PrivateRoute>\n    </div>\n  );\n};\n\nexport default IndexUsuarios;\n","import { gql } from \"@apollo/client\";\n\nconst EDITAR_USUARIO = gql`\n  mutation EditarUsuario(\n    $_id: String!\n    $nombre: String!\n    $apellido: String!\n    $identificacion: String!\n    $correo: String!\n    $estado: Enum_EstadoUsuario!\n  ) {\n    editarUsuario(\n      _id: $_id\n      nombre: $nombre\n      apellido: $apellido\n      identificacion: $identificacion\n      correo: $correo\n      estado: $estado\n    ) {\n      _id\n      nombre\n      apellido\n      correo\n      estado\n      identificacion\n      rol\n    }\n  }\n`;\n\nexport { EDITAR_USUARIO };\n","import React, { useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_USUARIO } from 'graphql/usuarios/queries';\nimport Input from 'components/Input';\nimport ButtonLoading from 'components/ButtonLoading';\nimport useFormData from 'hooks/useFormData';\nimport { toast } from 'react-toastify';\nimport { EDITAR_USUARIO } from 'graphql/usuarios/mutations';\nimport DropDown from 'components/Dropdown';\nimport { Enum_EstadoUsuario } from 'utils/enums';\n\nconst EditarUsuario = () => {\n  const { form, formData, updateFormData } = useFormData(null);\n  const { _id } = useParams();\n\n  const {\n    data: queryData,\n    error: queryError,\n    loading: queryLoading,\n  } = useQuery(GET_USUARIO, {\n    variables: { _id },\n  });\n\n\n  const [editarUsuario, { data: mutationData, loading: mutationLoading, error: mutationError }] =\n    useMutation(EDITAR_USUARIO);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    delete formData.rol;\n    editarUsuario({\n      variables: { _id, ...formData },\n    });\n  };\n\n  useEffect(() => {\n    if (mutationData) {\n      toast.success('Usuario modificado correctamente');\n    }\n  }, [mutationData]);\n\n  useEffect(() => {\n    if (mutationError) {\n      toast.error('Error modificando el usuario');\n    }\n\n    if (queryError) {\n      toast.error('Error consultando el usuario');\n    }\n  }, [queryError, mutationError]);\n\n  if (queryLoading) return <div>Cargando....</div>;\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div className='flew flex-col w-full h-full items-center justify-center p-10'>\n      <Link to='/usuarios'>\n        <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\n      </Link>\n      <h1 className='text-7xl text-gray-900 text-white font-medium tracking-tight text-center'>Editar Usuario</h1>\n      <form\n        onSubmit={submitForm}\n        onChange={updateFormData}\n        ref={form}\n        className='flex flex-col items-center justify-center'\n      >\n        <Input\n          label='Nombre de la persona:'\n          type='text'\n          name='nombre'\n          defaultValue={queryData.Usuario.nombre}\n          required={true}\n        />\n        <Input\n          label='Apellido de la persona:'\n          type='text'\n          name='apellido'\n          defaultValue={queryData.Usuario.apellido}\n          required={true}\n        />\n        <Input\n          label='Correo de la persona:'\n          type='email'\n          name='correo'\n          defaultValue={queryData.Usuario.correo}\n          required={true}\n        />\n        <Input\n          label='Identificación de la persona:'\n          type='text'\n          name='identificacion'\n          defaultValue={queryData.Usuario.identificacion}\n          required={true}\n        />\n        <DropDown\n          label='Estado de la persona:'\n          name='estado'\n          defaultValue={queryData.Usuario.estado}\n          required={true}\n          options={Enum_EstadoUsuario}\n        />\n        <span>Rol del usuario: {queryData.Usuario.rol}</span>\n        <ButtonLoading\n          disabled={Object.keys(formData).length === 0}\n          loading={mutationLoading}\n          text='Confirmar'\n        />\n      </form>\n    </div>\n    </div>\n  );\n};\n\nexport default EditarUsuario;\n","import React from \"react\";\nimport { Outlet } from \"react-router\";\n\nconst AuthLayout = () => {\n  return (\n    <div className=\"flex flex-col md:flex-row flex-no-wrap h-screen\">\n      <div className=\"flex w-full h-full\">\n        <div className=\"w-full h-full  overflow-y-scroll\">\n          {/* Layout de Autenticacion Desplegado */}\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthLayout;\n","import React, { useEffect } from \"react\";\nimport Input from \"components/Input\";\nimport { Enum_Rol } from \"utils/enums\";\nimport DropDown from \"components/Dropdown\";\nimport ButtonLoading from \"components/ButtonLoading\";\nimport useFormData from \"hooks/useFormData\";\nimport { Link } from \"react-router-dom\";\nimport { REGISTRO } from \"graphql/auth/mutation\";\nimport { useMutation } from \"@apollo/client\";\nimport { useNavigate } from \"react-router\";\nimport { useAuth } from \"context/authContext\";\n\nconst Register = () => {\n  const { setToken } = useAuth();\n  const navigate = useNavigate();\n  const { form, formData, updateFormData } = useFormData();\n\n  const [\n    registro,\n    { data: dataMutation, loading: loadingMutation, error: errorMutation },\n  ] = useMutation(REGISTRO);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    registro({ variables: formData });\n  };\n\n  useEffect(() => {\n    if (dataMutation) {\n      if (dataMutation.registro.token) {\n        setToken(dataMutation.registro.token);\n        navigate(\"/\");\n      }\n    }\n  }, [dataMutation, setToken, navigate]);\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div className=\"flex flex-col h-full w-full items-center justify-center\">\n      <h1 className=\"text-8xl text-bold text-white\">Regístrate</h1>\n      <form\n        className=\"flex flex-col\"\n        onSubmit={submitForm}\n        onChange={updateFormData}\n        ref={form}\n      >\n        <div className=\"grid grid-cols-2 gap-5\">\n          <Input label=\"Nombre:\" name=\"nombre\" type=\"text\" required />\n          <Input label=\"Apellido:\" name=\"apellido\" type=\"text\" required />\n          <Input\n            label=\"Documento:\"\n            name=\"identificacion\"\n            type=\"text\"\n            required\n          />\n          <DropDown\n            label=\"Rol deseado:\"\n            name=\"rol\"\n            required={true}\n            options={Enum_Rol}\n          />\n          <Input label=\"Correo:\" name=\"correo\" type=\"email\" required />\n          <Input label=\"Contraseña:\" name=\"password\" type=\"password\" required />\n        </div>\n        <ButtonLoading\n          disabled={Object.keys(formData).length === 0}\n          loading={false}\n          text=\"Registrarme\"\n        />\n      </form>\n      <span>¿Ya tienes una cuenta?</span>\n      <Link to=\"/auth/login\">\n        <span className=\"text-2xl text-bold text-white\">Inicia sesión</span>\n      </Link>\n    </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect } from \"react\";\nimport Input from \"components/Input\";\nimport ButtonLoading from \"components/ButtonLoading\";\nimport { Link } from \"react-router-dom\";\nimport useFormData from \"hooks/useFormData\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN } from \"graphql/auth/mutation\";\nimport { useAuth } from \"context/authContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const { setToken } = useAuth();\n  const { form, formData, updateFormData } = useFormData();\n\n  const [\n    login,\n    { data: dataMutation, loading: mutationLoading, error: mutationError },\n  ] = useMutation(LOGIN);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n\n    login({\n      variables: formData,\n    });\n  };\n\n  useEffect(() => {\n    if (dataMutation) {\n      if (dataMutation.login.token) {\n        setToken(dataMutation.login.token);\n        navigate(\"/\");\n      }\n    }\n  }, [dataMutation, setToken, navigate]);\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div className='p-10 flex flex-col'>\n    <div className='flex w-full items-center justify-center'>\n      <h1 className='text-9xl text-white text-white font-medium tracking-tight'>Iniciar Sesión</h1>\n    </div>\n      <span className=\"text 3xl text-bold text-white text-center\">!Bienvenido/a!</span>\n      <form\n        className=\"flex flex-col\"\n        onSubmit={submitForm}\n        onChange={updateFormData}\n        ref={form}\n      >\n        <Input name=\"correo\" type=\"email\" label=\"Correo\" required={true} />\n        <Input\n          name=\"password\"\n          type=\"password\"\n          label=\"Contraseña\"\n          required={true}\n        />\n        <ButtonLoading\n          disabled={Object.keys(formData).length === 0}\n          loading={mutationLoading}\n          text=\"Iniciar Sesión\"\n        />\n      </form>\n      <span className=\"text-1xl text-bold text-white-300\">¿No tienes una cuenta?</span>\n      <Link to=\"/auth/register\">\n        <span className=\"text-2xl text-bold text-white\">Regístrate</span>\n      </Link>\n      {/* <img src=\"./public/log-rsoft.png\" alt=\"Logo\" className=\"h-5\" /> */}\n    </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport { styled } from \"@mui/material/styles\";\n\nconst AccordionStyled = styled((props) => <Accordion {...props} />)(\n  ({ theme }) => ({\n    backgroundColor: \"#ffffff\",\n  })\n);\nconst AccordionSummaryStyled = styled((props) => (\n  <AccordionSummary {...props} />\n))(({ theme }) => ({\n  backgroundColor: \"#ffffff\",\n}));\nconst AccordionDetailsStyled = styled((props) => (\n  <AccordionDetails {...props} />\n))(({ theme }) => ({\n  backgroundColor: \"#ffffff\",\n}));\n\nexport { AccordionStyled, AccordionSummaryStyled, AccordionDetailsStyled };\n","import { createContext, useContext } from \"react\";\n\nexport const ProjectQueryContext = createContext(null);\n\nexport const useProjectQuery = () => {\n  return useContext(ProjectQueryContext);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { PROYECTOS } from 'graphql/proyectos/queries';\nimport DropDown from 'components/Dropdown';\nimport { Dialog } from '@mui/material';\nimport useFormData from 'hooks/useFormData';\nimport PrivateComponent from 'components/PrivateComponent';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { AccordionStyled, AccordionSummaryStyled, AccordionDetailsStyled, } from 'components/Accordion';\nimport { EDITAR_OBJETIVO, ELIMINAR_OBJETIVO } from '../../graphql/proyectos/mutations';\nimport { ProjectQueryContext, useProjectQuery } from '../../context/projectQueryContext';\nimport ReactLoading from \"react-loading\";\nimport Input from 'components/Input';\nimport { Enum_TipoObjetivo } from '../../utils/enums';\n\nconst IndexProyectos = () => {\n  const { data: queryData, loading, error, refetch } = useQuery(PROYECTOS);\n\n  useEffect(() => {\n    console.log('datos proyecto', queryData);\n    refetch();\n  }, [queryData]);\n\n  if (loading) return <div>Cargando...</div>;\n\n  if (queryData.Proyectos) {\n    return (\n      <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n      <ProjectQueryContext.Provider value={{queryData, refetch}} >\n      <div className='p-10 flex flex-col'>\n        <div className='flex w-full items-center justify-center'>\n          <h1 className='text-7xl text-gray-900 text-white font-medium tracking-tight'>Lista de Proyectos con Objetivos</h1>\n        </div>\n        {/* <PrivateComponent roleList={['ADMINISTRADOR', 'LIDER']}> */}\n        <PrivateComponent roleList={['LIDER']}>\n          <div className='my-2 self-end'>\n            <button className='btn btn-outline-success'>\n              <Link className=\"bg-blue text-gray-900 hover:text-white\" to='/proyectos/nuevo'>Crear Proyecto</Link>\n            </button>\n          </div>\n        </PrivateComponent>\n        {queryData.Proyectos.map((proyecto) => {\n          return <AccordionProyecto proyecto={proyecto} />;\n        })}\n      </div>\n      </ProjectQueryContext.Provider>\n      </div>\n    );\n  }\n\n  return <></>;\n};\n\nconst AccordionProyecto = ({ proyecto }) => {\n  const [showDialog, setShowDialog] = useState(false);\n  return (\n    <>\n      <AccordionStyled>\n        <AccordionSummaryStyled expandIcon={<i className='text-blue-600 fas fa-hand-point-down' />}>\n          <div className='justify-center'>\n            <div className='font-bold text-black-100'>\n              {proyecto.nombre}\n            </div>\n            <div className='flex text-black-100'>\n              Estado Proyecto:  .<div className=\"font-bold \">{proyecto.estado}</div> \n            </div>\n          </div>\n        </AccordionSummaryStyled>\n        <AccordionDetailsStyled>\n          <div className=\"font-sans font-bold\">Este proyecto se encuentra liderado Por: </div>\n          <div className=\"font-sans\">{proyecto.lider.correo}</div>\n          <div className=''>\n            {proyecto.objetivos.map((objetivo, index) => {\n              return <Objetivo index={index} _id={objetivo._id} idProyecto={proyecto._id} tipo={objetivo.tipo} descripcion={objetivo.descripcion} />;\n            })}\n          </div>\n        </AccordionDetailsStyled>\n      </AccordionStyled>\n      <Dialog\n        open={showDialog}\n        onClose={() => {\n          setShowDialog(false);\n        }}\n      >\n      </Dialog>\n    </>\n  );\n};\n\n\nconst Objetivo = ({ index, _id, idProyecto, tipo, descripcion }) => {\n\n  const {refetch} = useProjectQuery();\n\n  const [showEditDialog, setShowEditDialog] = useState (false);\n\n  const [eliminarObjetivo, { data: dataMutationEliminar, loading: eliminarLoading }] = useMutation(ELIMINAR_OBJETIVO);\n\n  useEffect(() => {\n    console.log('Eliminar Objetivo', dataMutationEliminar);\n    if (dataMutationEliminar) {\n      refetch();\n      toast.success('Objetivo Eliminado');\n    }\n  }, [dataMutationEliminar, refetch]);\n\n  const ejecutarEliminacion = ()=> {\n    eliminarObjetivo({variables:{ idProyecto, idObjetivo: _id }})\n  }\n\n  if(eliminarLoading) return <ReactLoading type=\"spin\" height={50} width={50} />\n\n  return (\n    <div>\n      <table class=\"table table-hover table-primary text-center\">\n        <thead>\n          <tr>\n            {/* <th scope=\"col\">#</th>\n            <th scope=\"col\">First</th> */}\n            <th scope=\"col\">Tipo</th>\n            <th scope=\"col\">Descripcion</th>\n            <th scope=\"col\">Opciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr className=\"table-secondary \">\n            {/* <th scope=\"row\">1</th>\n            <td>Mark</td> */}\n            <td>{tipo}</td>\n            <td>{descripcion}</td>\n            <td>\n              <PrivateComponent roleList={['LIDER']}>\n                <div className=\"\">\n                  <i onClick={() => setShowEditDialog(true)} className=\"far fa-edit mx-2 hover:text-green-600 cursor-pointer\" />\n                  <i onClick={ejecutarEliminacion} className=\"fas fa-minus-circle mx-2 hover:text-red-600 cursor-pointer\" />\n                </div>\n                <Dialog open={showEditDialog} onClose={() => setShowEditDialog(false)} >\n                  <EditarObjetivo descripcion={descripcion} tipo={tipo} index={index} idProyecto={idProyecto} setShowEditDialog={setShowEditDialog} />\n\n                </Dialog>\n              </PrivateComponent>\n            </td>\n          </tr>\n        </tbody>\n\n      </table>\n\n    </div>\n  );\n};\n\nconst EditarObjetivo = ({ descripcion, tipo, index, idProyecto, setShowEditDialog }) => {\n\n  const {refetch} = useProjectQuery();\n\n  const { form, formData, updateFormData } = useFormData();\n\n  const [editatObjetivo, { data: dataMutation }] = useMutation(EDITAR_OBJETIVO);\n\n  useEffect(() => {\n    if (dataMutation){\n      toast.success('El Objetivo fue modificado');\n      setShowEditDialog(false);\n      refetch();\n    }\n    // console.log('Edicion Objetivo ', dataMutation)\n  }, [dataMutation])\n\n  const submitForm = (e) => {\n    e.preventDefault()\n    editatObjetivo({variables: {\n      idProyecto,\n      indexObjetivo: index,\n      campos: formData,\n    }})\n  }\n\n  return (\n    <div className='p-20'>\n      <h1 className='text-4xl'>Editar Objetivo Proyecto</h1>\n      <form ref={form} onChange={updateFormData} onSubmit={submitForm} >\n\n        <DropDown label='Tipo de Objetivo' name='tipo' required={true} options={Enum_TipoObjetivo} defaultValue={tipo} />\n        <Input label='Descripcion Del Objetivo' name='descripcion' required={true} defaultValue={descripcion} />\n        <button type=\"submit\" onClick = {() => {}} className=\"btn btn-primary\">Editar </button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default IndexProyectos;\n","import { createContext, useContext } from \"react\";\n\nexport const ObjContext = createContext(null);\n\nexport const useObj = () => {\n  return useContext(ObjContext);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport Input from 'components/Input';\nimport { GET_USUARIOS } from 'graphql/usuarios/queries';\nimport { Link } from 'react-router-dom';\nimport DropDown from 'components/Dropdown';\nimport ButtonLoading from 'components/ButtonLoading';\nimport useFormData from 'hooks/useFormData';\nimport { Enum_TipoObjetivo } from 'utils/enums';\nimport { nanoid } from 'nanoid';\nimport { ObjContext } from 'context/objContext';\nimport { useObj } from 'context/objContext';\nimport { CREAR_PROYECTO } from 'graphql/proyectos/mutations';\nimport { toast } from \"react-toastify\";\n\nconst NuevoProyecto = () => {\n  const { form, formData, updateFormData } = useFormData();\n  const [listaUsuarios, setListaUsuarios] = useState({});\n  const { data, loading, error, refetch } = useQuery(GET_USUARIOS, {\n    variables: {\n      filtro: { rol: 'LIDER', estado: 'AUTORIZADO' },\n    },\n  });\n\n  const [crearProyecto, { data: mutationData, loading: mutationLoading, error: mutationError }] =\n    useMutation(CREAR_PROYECTO);\n\n\n    /* useEffect(() => {\n      if (crearProyecto) {\n        toast.success(\"Proyecto creado exitosamente\");\n        refetch();\n      }\n    }, [crearProyecto]);\n */\n\n  useEffect(() => {\n    console.log(data);\n    if (data) {\n      const lu = {};\n      data.Usuarios.forEach((elemento) => {\n        lu[elemento._id] = elemento.correo;\n      });\n\n      setListaUsuarios(lu);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    console.log('data mutation', mutationData);\n  });\n\n  const submitForm = (e) => {\n    e.preventDefault();\n\n    formData.objetivos = Object.values(formData.objetivos);\n    formData.presupuesto = parseFloat(formData.presupuesto);\n\n    crearProyecto({\n      variables: formData,\n    });\n  };\n\n  if (loading) return <div>...Loading</div>;\n\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <div className='p-10 flex flex-col items-center'>\n      <div className='self-start'>\n        <Link to='/proyectosObjetivo'>\n          <i className='fas fa-arrow-left' />\n        </Link>\n      </div>\n      <h1 className='text-7xl text-gray-900 text-white font-medium tracking-tight'>Crear Nuevo Proyecto</h1>\n      <form ref={form} onChange={updateFormData} onSubmit={submitForm}>\n        <Input name='nombre' label='Nombre del Proyecto' required={true} type='text' />\n        <Input name='presupuesto' label='Presupuesto del Proyecto' required={true} type='number' />\n        <Input name='fechaInicio' label='Fecha de Inicio' required={true} type='date' />\n        <Input name='fechaFin' label='Fecha de Fin' required={true} type='date' />\n        <DropDown label='Líder' options={listaUsuarios} name='lider' required={true} />\n        <Objetivos />\n        <ButtonLoading text='Crear Proyecto' loading={false} disabled={false} />\n      </form>\n    </div>\n    </div>\n  );\n};\n\nconst Objetivos = () => {\n  const [listaObjetivos, setListaObjetivos] = useState([]);\n  const [maxObjetivos, setMaxObjetivos] = useState(false);\n\n  const eliminarObjetivo = (id) => {\n    setListaObjetivos(listaObjetivos.filter((el) => el.props.id !== id));\n  };\n\n  const componenteObjetivoAgregado = () => {\n    const id = nanoid();\n    return <FormObjetivo key={id} id={id} />;\n  };\n\n  useEffect(() => {\n    if (listaObjetivos.length > 4) {\n      setMaxObjetivos(true);\n    } else {\n      setMaxObjetivos(false);\n    }\n  }, [listaObjetivos]);\n\n  return (\n    <ObjContext.Provider value={{ eliminarObjetivo }}>\n      <div>\n        <span>Objetivos del Proyecto</span>\n        {!maxObjetivos && (\n          <i\n            onClick={() => setListaObjetivos([...listaObjetivos, componenteObjetivoAgregado()])}\n            className='fas fa-plus rounded-full bg-green-500 hover:bg-green-400 text-white p-2 mx-2 cursor-pointer'\n          />\n        )}\n        {listaObjetivos.map((objetivo) => {\n          return objetivo;\n        })}\n      </div>\n    </ObjContext.Provider>\n  );\n};\n\nconst FormObjetivo = ({ id }) => {\n  const { eliminarObjetivo } = useObj();\n  return (\n    <div className='flex items-center'>\n      <Input\n        name={`nested||objetivos||${id}||descripcion`}\n        label='Descripción'\n        type='text'\n        required={true}\n      />\n      <DropDown\n        name={`nested||objetivos||${id}||tipo`}\n        options={Enum_TipoObjetivo}\n        label='Tipo de Objetivo'\n        required={true}\n      />\n      <i\n        onClick={() => eliminarObjetivo(id)}\n        className='fas fa-minus rounded-full bg-red-500 hover:bg-red-400 text-white p-2 mx-2 cursor-pointer mt-6'\n      />\n    </div>\n  );\n};\n\nexport default NuevoProyecto;\n","import { gql } from \"@apollo/client\";\n\nconst GET_INSCRIPCIONES = gql`\n  query Inscripciones {\n    Inscripciones {\n      _id\n      estado\n      estudiante {\n        _id\n        nombre\n        apellido\n        correo\n      }\n      proyecto {\n        _id\n        nombre\n        lider {\n          _id\n        }\n      }\n    }\n  }\n`;\n\nexport { GET_INSCRIPCIONES };\n","import React, { useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport PrivateRoute from \"components/PrivateRoute\";\nimport { GET_INSCRIPCIONES } from \"graphql/inscripciones/queries\";\nimport { APROBAR_INSCRIPCION } from \"graphql/inscripciones/mutaciones\";\nimport ButtonLoading from \"components/ButtonLoading\";\nimport { toast } from \"react-toastify\";\nimport {\n  AccordionStyled,\n  AccordionSummaryStyled,\n  AccordionDetailsStyled,\n} from \"components/Accordion\";\n\nconst IndexInscripciones = () => {\n  const { data, loading, error, refetch } = useQuery(GET_INSCRIPCIONES);\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  if (loading) return <div>Loading...</div>;\n  return (\n    <div class=\"bg-gradient-to-r from-blue-500 to-green-500 rounded-lg px-6 py-8 ring-1 ring-gray-900/5 shadow-xl\">\n    <PrivateRoute roleList={[\"ADMINISTRADOR\", \"LIDER\"]}>\n      <div className=\"p-10\">\n        <div>Pagina de inscripciones</div>\n        <div className=\"my-4\">\n          <AccordionInscripcion\n            titulo=\"Inscripciones aprobadas\"\n            data={data.Inscripciones.filter((el) => el.estado === \"ACEPTADO\")}\n            refetch={refetch}\n          />\n          <AccordionInscripcion\n            titulo=\"Inscripciones pendientes\"\n            data={data.Inscripciones.filter((el) => el.estado === \"PENDIENTE\")}\n            refetch={refetch}\n          />\n          <AccordionInscripcion\n            titulo=\"Inscripciones rechazadas\"\n            data={data.Inscripciones.filter((el) => el.estado === \"RECHAZADO\")}\n          />\n        </div>\n      </div>\n    </PrivateRoute>\n    </div>\n  );\n};\n\nconst AccordionInscripcion = ({ data, titulo, refetch = () => {} }) => {\n  return (\n    <AccordionStyled>\n      <AccordionSummaryStyled>\n        {titulo} ({data.length})\n      </AccordionSummaryStyled>\n      <AccordionDetailsStyled>\n        <div className=\"flex\">\n          {data &&\n            data.map((inscripcion) => {\n              return (\n                <Inscripcion inscripcion={inscripcion} refetch={refetch} />\n              );\n            })}\n        </div>\n      </AccordionDetailsStyled>\n    </AccordionStyled>\n  );\n};\n\nconst Inscripcion = ({ inscripcion, refetch }) => {\n  const [aprobarInscripcion, { data, loading, error }] =\n    useMutation(APROBAR_INSCRIPCION);\n\n  useEffect(() => {\n    if (data) {\n      toast.success(\"Inscripcion aprobada con exito\");\n      refetch();\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(\"Error aprobando la inscripcion\");\n    }\n  }, [error]);\n\n  const cambiarEstadoInscripcion = () => {\n    aprobarInscripcion({\n      variables: {\n        aprobarInscripcionId: inscripcion._id,\n      },\n    });\n  };\n\n  return (\n    <div className=\"bg-gray-900 text-gray-50 flex flex-col p-6 m-2 rounded-lg shadow-xl\">\n      <span>{inscripcion.proyecto.nombre}</span>\n      <span>{inscripcion.estudiante.nombre}</span>\n      <span>{inscripcion.estado}</span>\n      {inscripcion.estado === \"PENDIENTE\" && (\n        <ButtonLoading\n          onClick={() => {\n            cambiarEstadoInscripcion();\n          }}\n          text=\"Aprobar Inscripcion\"\n          loading={loading}\n          disabled={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default IndexInscripciones;\n","import React, { useState, useEffect } from \"react\";\nimport PrivateLayout from \"layouts/PrivateLayout\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { UserContext } from \"context/userContext\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n//ADMINISTRADOR\nimport IndexProyectosAdmin from \"pages/proyectosAdmin\";\nimport EditarEstadoFase from \"./pages/proyectosAdmin/EditarEstadoFase\";\n\n//LIDER\nimport IndexProyectosLider from \"pages/proyectosLider/index\";\nimport ProyectosDetalle from \"pages/proyectosLider/detalle\";\n\n//ESTUDIANTE\nimport IndexProyectosEstudiante from \"pages/proyectosEstudiante/index\";\nimport IndexProyectosDisponibles from \"pages/proyectosEstudiante/proyectosDisponibles\";\nimport AvancesEstudiante from \"pages/proyectosEstudiante/avances\";\nimport EditarAvance from \"pages/proyectosEstudiante/editarAvance\";\nimport NuevoAvance from \"pages/proyectosEstudiante/NuevoAvance\";\n//paginas ejemplo\nimport Index from \"pages/Index\";\nimport Page2 from \"pages/Page2\";\n\nimport IndexUsuarios from \"pages/usuarios\";\nimport EditarUsuario from \"pages/usuarios/editar\";\nimport AuthLayout from \"layouts/AuthLayout\";\nimport Register from \"pages/auth/register\";\nimport Login from \"pages/auth/login\";\nimport { AuthContext } from \"context/authContext\";\nimport IndexProyectos from \"pages/proyectos/Index\";\nimport jwt_decode from \"jwt-decode\";\nimport \"styles/globals.css\";\nimport \"styles/tabla.css\";\nimport NuevoProyecto from \"pages/proyectos/NuevoProyecto\";\nimport IndexInscripciones from \"pages/inscripciones\";\n\n// import PrivateRoute from 'components/PrivateRoute';\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:4000/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = JSON.parse(localStorage.getItem(\"token\"));\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink),\n});\n\nfunction App() {\n  const [userData, setUserData] = useState({});\n  const [authToken, setAuthToken] = useState(\"\");\n\n  const setToken = (token) => {\n    console.log(\"set token\", token);\n    setAuthToken(token);\n    if (token) {\n      localStorage.setItem(\"token\", JSON.stringify(token));\n    } else {\n      localStorage.removeItem(\"token\");\n    }\n  };\n\n  useEffect(() => {\n    if (authToken) {\n      const decoded = jwt_decode(authToken);\n      setUserData({\n        _id: decoded._id,\n        nombre: decoded.nombre,\n        apellido: decoded.apellido,\n        identificacion: decoded.identificacion,\n        correo: decoded.correo,\n        rol: decoded.rol,\n      });\n    }\n  }, [authToken]);\n\n  // console.log(\"usuarioFront2:\", userData._id);\n\n  return (\n    <ApolloProvider client={client}>\n      <AuthContext.Provider value={{ authToken, setAuthToken, setToken }}>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          <BrowserRouter>\n            <Routes>\n              <Route path=\"/\" element={<PrivateLayout />}>\n                <Route path=\"\" element={<Index />} />\n                <Route path=\"/usuarios\" element={<IndexUsuarios />} />\n                {/* ADMINISTRADOR */}\n                <Route\n                  path=\"/usuarios/editar/:_id\"\n                  element={<EditarUsuario />}\n                />\n                <Route\n                  path=\"/proyectosAdmin\"\n                  element={<IndexProyectosAdmin />}\n                />\n                <Route\n                  path=\"/proyectosAdmin/editar/:_id\"\n                  element={<EditarEstadoFase />}\n                />\n                {/* LIDER */}\n                <Route\n                  path=\"/proyectosLider/index\"\n                  element={<IndexProyectosLider />}\n                />\n                <Route\n                  path=\"/proyectosLider/detalle/:_id\"\n                  element={<ProyectosDetalle />}\n                />\n                {/* ESTUDIANTE */}\n                <Route\n                  path=\"/proyectosEstudiante/index\"\n                  element={<IndexProyectosEstudiante />}\n                />\n                <Route\n                  path=\"/proyectosEstudiante/avances/:_id\"\n                  element={<AvancesEstudiante />}\n                />\n                <Route\n                  path=\"/proyectosEstudiante/nuevoAvance/:_id\"\n                  element={<NuevoAvance />}\n                />\n                <Route\n                  path=\"/proyectosEstudiante/editarAvance/:_id\"\n                  element={<EditarAvance />}\n                />\n                <Route\n                  path=\"/proyectosEstudiante/proyectosDisponibles\"\n                  element={<IndexProyectosDisponibles />}\n                />\n                {/* <Route\n                  path=\"/proyectosEstudiante/inscripcion\"\n                  element={<IndexProyectosDisponibles />}\n                /> */}\n                <Route path=\"/proyectosObjetivo\" element={<IndexProyectos />} />\n                <Route path=\"/proyectos/nuevo\" element={<NuevoProyecto />} />\n                <Route path=\"/inscripciones\" element={<IndexInscripciones />} />\n                <Route path=\"page2\" element={<Page2 />} />\n              </Route>\n              <Route path=\"/auth\" element={<AuthLayout />}>\n                <Route path=\"register\" element={<Register />} />\n                <Route path=\"login\" element={<Login />} />\n              </Route>\n            </Routes>\n          </BrowserRouter>\n        </UserContext.Provider>\n      </AuthContext.Provider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"></link>\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}